openapi: 3.0.0
x-stoplight:
  id: qg3dsqhh03xfo
info:
  title: Harness NextGen Software Delivery Platform API Reference
  version: '1.0'
  description: This is the Open Api Spec 3 for the Pipeline Service. This is under active development. Beware of the breaking change with respect to the generated code stub.
  contact:
    email: contact@harness.io
servers:
  - url: 'https://app.harness.io'
    description: Harness host URL.
tags:
  - name: Pipelines
    description: This contains APIs for performing CRUD operations on Pipelines.
    x-displayName: 'Pipelines [Beta]'
  - name: Input Sets
    description: This contains APIs for Input Sets.
    x-displayName: 'Input Sets [Beta]'
  - name: Approvals
    description: This contains APIs for Approvals.
    x-displayName: Approvals
  - name: Pipeline Execution
    description: This contains APIs for Pipeline Execution.
    x-displayName: 'Pipeline Execution [Beta]'
  - name: Triggers
    description: This contains APIs for performing CRUD operations on Triggers.
    x-displayName: 'Triggers [Beta]'
  - name: Steps
    description: This contains APIs for Steps.
    x-displayName: 'Steps [Beta]'
  - name: Schemas
    description: This contains APIs for Schemas.
    x-displayName: 'Schemas [Beta]'
paths:
  '/v1/orgs/{org}/projects/{project}/pipelines':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
    get:
      summary: List Pipelines
      operationId: list-pipelines
      description: Returns a list of Pipelines.
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/PageIndex'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/SearchTerm'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Order'
        - schema:
            type: string
            enum:
              - CD
              - CI
              - CV
              - CF
              - CE
              - STO
          in: query
          name: module
          description: Harness module which is part of the Pipeline.
        - schema:
            type: string
          in: query
          name: filter_identifier
          description: Identifier of a saved Filter.
        - schema:
            type: array
            items:
              type: string
          in: query
          name: pipeline_identifiers
          description: List of Pipeline identifiers on the basis of which the Pipelines are filtered.
        - schema:
            type: string
            pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$'
            minLength: 1
            maxLength: 128
          in: query
          name: name
          description: Pipeline Name on the basis of which the Pipelines are filtered.
        - schema:
            type: string
            maxLength: 1024
          in: query
          name: description
          description: Pipeline Description on the basis of which the Pipelines are filtered.
        - schema:
            type: array
            items:
              type: string
            maxItems: 128
            example: 'key:value'
          examples:
            key_and_value:
              value: 'key:value'
              summary: Tag having both Key and Value.
            key_only:
              value: key
              summary: Tag having only Key.
          in: query
          name: tags
          description: 'Filter tags as a key:value pair.'
        - schema:
            type: array
            items:
              type: string
          in: query
          name: service_names
          description: 'Service names on the basis of which the Pipelines are filtered. [CD]'
        - schema:
            type: array
            items:
              type: string
          in: query
          name: env_names
          description: 'Names of Environments on the basis of which the Pipelines are filtered. [CD]'
        - schema:
            type: string
          in: query
          name: deployment_type
          description: 'Deployment type on the basis of which the Pipelines are filtered. [CD]'
        - schema:
            type: string
          in: query
          name: repository
          description: 'Repository name on the basis of which the Pipelines are filtered. [CI]'
      security:
        - x-api-key: []
      tags:
        - Pipelines
      responses:
        '200':
          $ref: '#/components/responses/PipelineListResponseBody'
      x-stoplight:
        id: 7m826e05qk5w4
    post:
      summary: Create a Pipeline
      operationId: create-pipeline
      description: Creates a Pipeline.
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      tags:
        - Pipelines
      requestBody:
        $ref: '#/components/requestBodies/PipelineCreateRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/PipelineCreateResponseBody'
      x-stoplight:
        id: x75qarmwebu17
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/triggers':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
      - $ref: '#/components/parameters/IgnoreError'
    post:
      summary: Create a Trigger
      operationId: create-trigger
      description: Create a Trigger.
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      tags:
        - Triggers
      requestBody:
        $ref: '#/components/requestBodies/TriggerRequestBody'
      responses:
        '201':
          $ref: '#/components/responses/TriggerResponseBody'
      x-stoplight:
        id: jzt6irms1mrij
      x-internal: true
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/triggers/{trigger}':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
      - $ref: '#/components/parameters/TriggerParam'
    get:
      summary: Retrieve a Trigger
      operationId: get-trigger
      description: Retrieve a Trigger.
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      tags:
        - Triggers
      responses:
        '200':
          $ref: '#/components/responses/TriggerGetResponseBody'
      x-internal: true
    put:
      summary: Update a Trigger
      operationId: update-trigger
      security:
        - x-api-key: []
      description: Updates a Trigger.
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/IgnoreError'
      tags:
        - Triggers
      requestBody:
        $ref: '#/components/requestBodies/TriggerRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/TriggerResponseBody'
      x-internal: true
    delete:
      summary: Delete a Trigger
      operationId: delete-trigger
      description: Deletes a Trigger.
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      tags:
        - Triggers
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: {}
            application/yaml:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: |
                    {}
      x-internal: true
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
    get:
      summary: Retrieve a Pipeline
      operationId: get-pipeline
      security:
        - x-api-key: []
      description: Retrieves a Pipeline.
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/Branch'
        - schema:
            type: boolean
            default: false
          in: query
          name: template_applied
          description: 'If true, returns Pipeline YAML with Templates applied on it.'
        - schema:
            type: string
          in: query
          name: connector_ref
          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).
        - schema:
            type: string
          in: query
          name: repo_name
          description: Name of the repository (for Git Experience).
        - schema:
            type: string
            default: 'false'
          in: header
          name: Load-From-Cache
          description: Flag to enable loading the remote pipeline from git or git cache
        - schema:
            type: boolean
            default: false
          in: query
          name: load_from_fallback_branch
          description: Flag to load the pipeline from the created non default branch
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: validate_async
          description: Flag to tell whether to start an asynchronous validation process or not
      tags:
        - Pipelines
      responses:
        '200':
          $ref: '#/components/responses/PipelineGetResponseBody'
      x-stoplight:
        id: a2i0cwl00nilx
    put:
      summary: Update a Pipeline
      operationId: update-pipeline
      security:
        - x-api-key: []
      description: Updates a Pipeline.
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      tags:
        - Pipelines
      requestBody:
        $ref: '#/components/requestBodies/PipelineUpdateRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/PipelineCreateResponseBody'
      x-stoplight:
        id: 2hbj02s4e2gg9
    delete:
      summary: Delete a Pipeline
      operationId: delete-pipeline
      description: Deletes a Pipeline.
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      tags:
        - Pipelines
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: {}
            application/yaml:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: |
                    {}
      x-stoplight:
        id: t3s8z26p8mp57
    patch:
      summary: Patch API for pipeline
      operationId: patch-pipeline
      responses:
        '200':
          $ref: '#/components/responses/PipelineCreateResponseBody'
      description: Patch API for pipeline
      tags:
        - Pipelines
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      requestBody:
        $ref: '#/components/requestBodies/PipelinePatchRequestBody'
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/validate':
    parameters:
      - name: org
        in: path
        required: true
        schema:
          type: string
        description: Organization identifier
      - name: project
        in: path
        required: true
        schema:
          type: string
        description: Project identifier
      - name: pipeline
        in: path
        required: true
        schema:
          type: string
        description: Pipeline identifier
    post:
      summary: Start a Pipeline Validation Event
      operationId: start-pipeline-validation-event
      security:
        - x-api-key: []
      description: Starts a Pipeline Validation Event and returns the UUID of the Event created
      x-internal: true
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/Branch'
        - schema:
            type: string
          in: query
          name: connector_ref
          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).
        - schema:
            type: string
          in: query
          name: repo_name
          description: Name of the repository (for Git Experience).
        - schema:
            type: boolean
            default: 'false'
          in: header
          name: Load-From-Cache
          description: Flag to enable loading the remote pipeline from git or git cache
        - schema:
            type: boolean
          in: query
          name: load_from_fallback_branch
          description: Flag to load the pipeline from the created non default branch
      tags:
        - Pipelines
      responses:
        '200':
          $ref: '#/components/responses/PipelineValidationUUIDResponseBody'
      x-stoplight:
        id: abex3g6cz8wrf
  '/v1/orgs/{org}/projects/{project}/pipelines/validate/{uuid}':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/UuidParam'
    get:
      summary: Get Pipeline Validation Result
      operationId: get-pipeline-validate-result
      security:
        - x-api-key: []
      description: Get Pipeline Validation Result for given UUID
      x-internal: true
      tags:
        - Pipelines
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      responses:
        '200':
          $ref: '#/components/responses/PipelineValidationResponseBody'
      x-stoplight:
        id: 55lxu0ef5imk4
  '/v1/orgs/{org}/projects/{project}/input-sets':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
    post:
      summary: Create an Input Set
      operationId: create-input-set
      responses:
        '201':
          $ref: '#/components/responses/InputSetResponseBody'
      tags:
        - Input Sets
      description: Creates an Input Set for a Pipeline.
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/PipelineInputSetParam'
      requestBody:
        $ref: '#/components/requestBodies/InputSetCreateRequestBody'
      x-stoplight:
        id: gls8md0bds5zw
    get:
      summary: List Input Sets
      operationId: list-input-sets
      responses:
        '200':
          $ref: '#/components/responses/InputSetListResponseBody'
      tags:
        - Input Sets
      description: Returns a List of Input Sets for a Pipeline.
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/PipelineInputSetParam'
        - $ref: '#/components/parameters/PageIndex'
        - $ref: '#/components/parameters/Limit'
        - $ref: '#/components/parameters/SearchTerm'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/Order'
      x-stoplight:
        id: 5zlemcvmat71n
  '/v1/orgs/{org}/projects/{project}/input-sets/{input-set}':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/InputSetParam'
    get:
      summary: Retrieve an Input Set
      tags:
        - Input Sets
      responses:
        '200':
          $ref: '#/components/responses/InputSetResponseBody'
      operationId: get-input-set
      description: Retrieves an Input Set for a Pipeline.
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/PipelineInputSetParam'
        - $ref: '#/components/parameters/Branch'
        - schema:
            type: string
          in: query
          name: parent_entity_connector_ref
          description: Connector reference for Parent Entity (Pipeline).
        - schema:
            type: string
          in: query
          name: parent_entity_repo_name
          description: Repository name for Parent Entity (Pipeline).
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: load_from_fallback_branch
          description: Flag to load the pipeline from the created non default branch
        - schema:
            type: string
            default: 'false'
          in: header
          description: Specifies whether the remote pipeline should be loaded from Git or Git cache.
          name: Load-From-Cache
      x-stoplight:
        id: 1oxo8uqhz17in
    put:
      summary: Update an Input Set
      operationId: update-input-set
      responses:
        '200':
          $ref: '#/components/responses/InputSetResponseBody'
      description: Updates an Input Set for a Pipeline.
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/PipelineInputSetParam'
      tags:
        - Input Sets
      requestBody:
        $ref: '#/components/requestBodies/InputSetUpdateRequestBody'
      x-stoplight:
        id: 6a727v1bpuf94
    delete:
      summary: Delete an Input Set
      operationId: delete-input-set
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: {}
            application/yaml:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: |
                    {}
      tags:
        - Input Sets
      description: Deletes an Input Set for a Pipeline.
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/PipelineInputSetParam'
      x-stoplight:
        id: azsav914tnu54
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/inputs':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
    get:
      summary: Get Pipeline Inputs
      operationId: get-pipeline-inputs
      responses:
        '200':
          $ref: '#/components/responses/InputsResponseBody'
      description: Return Inputs for a Pipeline.
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - schema:
            type: string
          in: query
          name: branch_name
          description: Name of the branch (for Git Experience).
        - schema:
            type: string
          in: query
          name: repo_name
          description: Name of the repository (for Git Experience).
        - schema:
            type: string
          in: query
          name: connector_ref
          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).
      tags:
        - Inputs
      x-internal: true
      x-stoplight:
        id: whe0mp3vymzmx
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/move-config':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
    post:
      summary: Move Pipeline YAML from inline to remote
      operationId: moveConfig
      description: Creates a remote entity by fetching pipeline YAML from Harness.
      responses:
        '200':
          $ref: '#/components/responses/PipelineMoveConfigResponseBody'
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      requestBody:
        $ref: '#/components/requestBodies/PipelineMoveConfigRequestBody'
      tags:
        - Pipelines
      x-internal: false
      x-stoplight:
        id: sugv4pfuz4j29
  '/v1/orgs/{org}/projects/{project}/input-sets/{input-set}/move-config':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/InputSetParam'
    post:
      summary: Move InputSet YAML from inline to remote
      operationId: inputSetsMoveConfig
      description: Creates a remote entity by fetching the input set YAML from Harness.
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      security:
        - x-api-key: []
      requestBody:
        $ref: '#/components/requestBodies/InputSetMoveConfigRequestBody'
      responses:
        '200':
          $ref: '#/components/responses/InputSetMoveConfigResponseBody'
      tags:
        - Input Sets
      x-internal: false
      x-stoplight:
        id: chkehl5dqjvfx
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/import':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
    post:
      summary: Get Pipeline YAML from Git Repository
      operationId: importPipelineFromGit
      responses:
        '200':
          $ref: '#/components/responses/PipelineSaveResponseBody'
      description: Fetches Pipeline YAML from Git Repository and saves a record for it in Harness
      tags:
        - Pipelines
      requestBody:
        $ref: '#/components/requestBodies/PipelineImportRequestBody'
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      x-stoplight:
        id: y24znmvlrj98c
  '/v1/orgs/{org}/projects/{project}/input-sets/{input-set}/import':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/InputSetParam'
    post:
      summary: Get Input Set YAML from Git Repository
      operationId: importInputSetFromGit
      responses:
        '200':
          $ref: '#/components/responses/InputSetImportResponseBody'
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/PipelineInputSetParam'
      requestBody:
        $ref: '#/components/requestBodies/InputSetImportRequestBody'
      description: Fetches InputSet YAML from Git Repository and saves a record for it in Harness
      tags:
        - Input Sets
      x-stoplight:
        id: iygdh0qo5i2as
  '/v1/orgs/{org}/projects/{project}/approvals/execution/{execution-id}':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/ExecutionIdParam'
    get:
      summary: Gets Approval Instances by Execution Id
      operationId: getApprovalInstancesByExecutionId
      responses:
        '200':
          $ref: '#/components/responses/ApprovalInstanceListResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: {}
            application/yaml:
              schema:
                type: object
                properties: {}
              examples:
                example-resp:
                  value: |
                    {}
      description: 'Gets Approval Instances by Execution Id [Beta]'
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - name: approval_status
          in: query
          description: This filters approval instances based on status
          schema:
            type: string
            enum:
              - WAITING
              - APPROVED
              - REJECTED
              - FAILED
              - ABORTED
              - EXPIRED
        - name: approval_type
          in: query
          description: This filters approval instances based on type
          schema:
            type: string
            enum:
              - HarnessApproval
              - JiraApproval
              - CustomApproval
              - ServiceNowApproval
        - name: node_execution_id
          in: query
          description: This filters approval instances based on runtime identifier of the step
          schema:
            type: string
        - schema:
            type: string
          in: query
          description: This filters approval instances based on callback id given in the Harness Approval Step configuration
          name: callback_id
      tags:
        - Approvals
      x-stoplight:
        id: 7nqmm3twhbd2z
    post:
      summary: Approve or Reject an Execution by Pipeline Execution ID
      operationId: addHarnessApprovalActivityByPipelineExecutionId
      responses:
        '200':
          $ref: '#/components/responses/ApprovalInstanceResponseBody'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties: {}
      x-stoplight:
        id: 2v95z8zipjgwz
      description: 'Approve or Reject an Execution by Pipeline Execution ID [Beta]'
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - schema:
            type: string
          in: query
          name: callback_id
          description: This filters approval instances based on callback id given in the Harness Approval Step configuration
      tags:
        - Approvals
      requestBody:
        $ref: '#/components/requestBodies/HarnessApprovalActivityRequestBody'
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/git-metadata':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
    put:
      summary: Update GitMetadata for Remote Pipelines
      operationId: update-pipeline-git-metadata
      responses:
        '200':
          $ref: '#/components/responses/GitMetadataUpdateResponseBody'
      requestBody:
        $ref: '#/components/requestBodies/GitMetadataUpdateRequestBody'
      security:
        - x-api-key: []
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      tags:
        - Pipelines
      description: Update git-metadata in remote pipeline
      x-stoplight:
        id: 2uv1mspdrbzvj
  '/v1/orgs/{org}/projects/{project}/input-sets/{input-set}/git-metadata':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/InputSetParam'
    put:
      summary: Update GitMetadata for Remote InputSet
      operationId: update-input-set-git-metadata
      responses:
        '200':
          $ref: '#/components/responses/GitMetadataUpdateResponseBody'
      requestBody:
        $ref: '#/components/requestBodies/GitMetadataUpdateRequestBody'
      security:
        - x-api-key: []
      tags:
        - Input Sets
      description: Update git-metadata in remote inputSet and return the updated inputSet
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/PipelineInputSetParam'
      x-stoplight:
        id: vlumua8hb77xj
  /v1/pipeline-schema/individual-schema:
    parameters: []
    get:
      summary: Get Individual Static Schema
      operationId: get-individual-static-schema
      responses:
        '200':
          $ref: '#/components/responses/IndividualSchemaResponseBody'
      x-stoplight:
        id: cechhz9yol7e0
      description: get individual schema for any step/stage/strategy/stepgroup.
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - schema:
            type: string
            enum:
              - step
              - stage
              - pipeline
              - strategy
              - step_group
              - trigger
          in: query
          name: node_group
        - schema:
            type: string
          in: query
          name: node_type
        - schema:
            type: string
            enum:
              - iacm
              - cd
              - ci
              - security
              - approval
              - custom
              - cf
              - template
          in: query
          name: node_group_differentiator
        - schema:
            type: string
            default: v0
            enum:
              - v0
              - v1
          in: query
          name: version
      security:
        - x-api-key: []
      tags:
        - Schemas
      x-internal: true
  /v1/pipeline-schema/inputs-schema:
    parameters: []
    post:
      summary: Get Inputs Schema
      operationId: get-inputs-schema
      responses:
        '200':
          $ref: '#/components/responses/PipelineInputSchemaDetailsResponseBody'
      x-stoplight:
        id: ponoyltbuvod0
      tags:
        - Schemas
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      security:
        - x-api-key: []
      requestBody:
        $ref: '#/components/requestBodies/PipelineInputsSchemaRequestBody'
      x-internal: true
  /v1/step-pallete:
    parameters: []
    post:
      summary: Get steps for the steps-pallete
      operationId: get-steps
      responses:
        '200':
          $ref: '#/components/responses/StepsDataResponseBody'
      tags:
        - Steps
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
      security:
        - x-api-key: []
      requestBody:
        $ref: '#/components/requestBodies/StepPalleteFilterRequestBody'
      x-internal: true
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/execute':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
    post:
      summary: Execute Pipeline
      operationId: execute-pipeline
      responses:
        '200':
          $ref: '#/components/responses/PipelineExecuteResponseBody'
      x-stoplight:
        id: ngg6c22zqeatk
      requestBody:
        $ref: '#/components/requestBodies/PipelineExecuteRequestBody'
      parameters:
        - schema:
            type: string
          in: query
          name: module
          description: 'Module type for the entity. If its from deployments,type will be CD , if its from build type will be CI'
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: use_fqn_if_error_response
          description: Use FQN in error response.
        - schema:
            type: boolean
            default: 'false'
          in: query
          name: notify_only_user
        - schema:
            type: string
          in: query
          name: notes
          description: Notes of a pipeline execution
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/Branch'
        - schema:
            type: string
          in: query
          name: connector_ref
          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).
        - schema:
            type: string
          in: query
          name: repo_name
          description: Name of the repository (for Git Experience).
      description: Pipeline Execution API
      tags:
        - Pipeline Execution
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/inputs-schema':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
    get:
      summary: Get inputs schema details
      tags:
        - Pipelines
      responses:
        '200':
          $ref: '#/components/responses/PipelineInputSchemaDetailsResponseBody'
      operationId: get-inputs-schema-details
      x-stoplight:
        id: vv4p6usbub9lz
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/Branch'
        - schema:
            type: string
          in: query
          name: connector_ref
          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).
        - schema:
            type: string
          in: query
          name: repo_name
          description: Name of the repository (for Git Experience).
      description: ''
      x-internal: true
  '/v1/orgs/{org}/projects/{project}/input-sets/merge':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
    post:
      summary: ''
      operationId: merged-input-sets
      responses:
        '200':
          $ref: '#/components/responses/MergeInputSetResponseBody'
      x-stoplight:
        id: cwwjia7vdatc3
      description: Gets merged input sets
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - schema:
            type: string
          in: header
          name: Load-From-Cache
          description: Flag to enable loading the remote Pipeline from git or git cache
        - $ref: '#/components/parameters/PipelineInputSetParam'
        - $ref: '#/components/parameters/PipelineRepoID'
        - $ref: '#/components/parameters/PipelineBranch'
        - $ref: '#/components/parameters/Branch'
        - schema:
            type: string
          in: query
          name: parent_entity_connector_ref
          description: Connector reference for Parent Entity (Pipeline).
        - schema:
            type: string
          in: query
          name: parent_entity_repo_name
          description: Repository name for Parent Entity (Pipeline).
      requestBody:
        $ref: '#/components/requestBodies/MergeInputSetRequestBody'
      x-internal: true
      tags:
        - Input Sets
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/execute/rerun/{execution-id}':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
      - $ref: '#/components/parameters/ExecutionIdParam'
    post:
      summary: Rerun Pipeline
      operationId: rerun-pipeline
      responses:
        '200':
          $ref: '#/components/responses/PipelineExecuteResponseBody'
      x-stoplight:
        id: jg2yu636yguhm
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - schema:
            type: string
          in: query
          name: module
          description: 'Module type for the entity. If its from deployments,type will be CD , if its from build type will be CI.'
        - schema:
            type: boolean
            default: false
          in: query
          name: use_fqn_if_error
        - schema:
            type: string
          in: query
          name: notes
          description: Notes of a pipeline execution
        - $ref: '#/components/parameters/Branch'
        - schema:
            type: string
          in: query
          name: connector_ref
          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).
        - schema:
            type: string
          in: query
          name: repo_name
          description: Name of the repository (for Git Experience).
      requestBody:
        $ref: '#/components/requestBodies/RerunPipelineRequestBody'
      description: Rerun Pipeline Execution
      tags:
        - Pipeline Execution
      x-internal: true
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/execute/retry/{execution-id}':
    post:
      summary: Retry Pipeline
      operationId: retry-pipeline-with-inputset-pipeline-yaml
      responses:
        '200':
          $ref: '#/components/responses/PipelineExecuteResponseBody'
      x-stoplight:
        id: aj5vkynomwd5s
      description: Retry a executed Pipeline with inputSet Pipeline yaml.
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - schema:
            type: string
          in: query
          name: module
          description: 'Module type for the entity. If its from deployments,type will be CD , if its from build type will be CI.'
        - schema:
            type: array
            items:
              type: string
          in: query
          name: retry_stages
          allowEmptyValue: false
          description: This param contains the identifier of stages from where to resume. It will be a list if we want to retry from parallel group.
        - schema:
            type: boolean
            default: true
          in: query
          name: run_all_stages
          description: 'This param provides an option to run only the failed stages when Pipeline fails at parallel group. By default, it will run all the stages in the failed parallel group.'
        - schema:
            type: string
          in: query
          name: notes
          description: Notes of a Pipeline execution.
      requestBody:
        $ref: '#/components/requestBodies/RerunPipelineRequestBody'
      x-internal: true
      tags:
        - Pipeline Execution
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
      - $ref: '#/components/parameters/ExecutionIdParam'
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/execute/stages-execution-list':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
    get:
      summary: Get Stages execution List for a given Pipeline execution.
      tags:
        - Pipeline Execution
      responses:
        '200':
          $ref: '#/components/responses/StageExecutionResponseList'
      operationId: get-stages-execution-list
      x-stoplight:
        id: eq7lkueaicn2j
      description: Returns list of Stage identifiers with their names and stage dependencies
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - schema:
            type: string
            default: 'false'
          in: header
          name: Load-From-Cache
          description: Flag to enable loading the remote Pipeline from git or git cache
        - $ref: '#/components/parameters/Branch'
        - schema:
            type: string
          in: query
          name: connector_ref
          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).
        - schema:
            type: string
          in: query
          name: repo_name
          description: Name of the repository (for Git Experience).
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/execute/rerun/{execution-id}/stages':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
      - $ref: '#/components/parameters/ExecutionIdParam'
    post:
      summary: Re-run Stages Execution of a Pipeline
      tags:
        - Pipeline Execution
      responses:
        '200':
          $ref: '#/components/responses/PipelineExecuteResponseBody'
      operationId: rerun-stages-execution-of-pipeline
      x-stoplight:
        id: siv5mzbllczkf
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - $ref: '#/components/parameters/Branch'
        - schema:
            type: string
          in: query
          name: connector_ref
          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).
        - schema:
            type: string
          in: query
          name: repo_name
          description: Name of the repository (for Git Experience)
        - schema:
            type: boolean
            default: false
          in: query
          name: use_fqn_if_error
          description: Use FQN in error response
        - schema:
            type: string
          in: query
          name: module
          description: 'Module type for the entity. If its from deployments,type will be CD , if its from build type will be CI.'
        - schema:
            type: string
          in: query
          name: notes
          description: Notes of a pipeline execution
      requestBody:
        $ref: '#/components/requestBodies/RunStageRequestBody'
  '/v1/orgs/{org}/projects/{project}/pipelines/{pipeline}/execute/stages':
    parameters:
      - $ref: '#/components/parameters/OrgParam'
      - $ref: '#/components/parameters/ProjectParam'
      - $ref: '#/components/parameters/PipelineParam'
    post:
      summary: Execute given Stages of a Pipeline
      tags:
        - Pipeline Execution
      responses:
        '200':
          $ref: '#/components/responses/PipelineExecuteResponseBody'
      operationId: execute-stages-with-input-yaml
      x-stoplight:
        id: 56cla3e4d0dw0
      description: Execute given Stages of a Pipeline with Inputs
      parameters:
        - $ref: '#/components/parameters/AccountHeader'
        - schema:
            type: string
          in: query
          name: module
          description: 'Module type for the entity. If its from deployments,type will be CD , if its from build type will be CI.'
        - schema:
            type: string
            default: 'false'
          in: query
          name: use_fqn_if_error
          description: Use FQN in error response.
        - schema:
            type: string
          in: query
          name: notes
          description: Notes of a Pipeline execution.
        - $ref: '#/components/parameters/Branch'
        - schema:
            type: string
          in: query
          name: connector_ref
          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).
        - schema:
            type: string
          in: query
          name: repo_name
          description: Name of the repository (for Git Experience).
      requestBody:
        $ref: '#/components/requestBodies/RunStageRequestBody'
components:
  schemas:
    GitDetails:
      title: Git Response Details
      x-stoplight:
        id: 4td78vqak799x
      type: object
      description: Git Experience related details of the Entity.
      x-examples:
        example-git:
          object_id: example_object
          branch_name: branch
          file_path: /folder/file.json
          repo_name: example_repository
          commit_id: abcd123
          file_url: www.repo/folder/file.com
          repo_url: www.repo.com
      properties:
        object_id:
          type: string
          description: Object identifier / blob id
          pattern: '^[a-zA-Z_][0-9a-zA-Z-_$]{0,127}$'
          minLength: 1
          maxLength: 128
        branch_name:
          type: string
          description: Name of the branch.
        file_path:
          type: string
          description: File path of the Entity in the repository.
        repo_name:
          type: string
          description: Name of the repository.
        commit_id:
          type: string
          description: Latest commit identifier.
        file_url:
          type: string
          description: File URL of the Entity.
        repo_url:
          type: string
          description: Repository URL of the Entity.
    PipelineGetResponseBody:
      title: Pipeline Get Response Body
      x-stoplight:
        id: iyawbezz7jxpr
      description: Pipeline response body.
      x-examples:
        example-get:
          pipeline_yaml: example_yaml_text
          template_applied_pipeline_yaml: example_yaml_text_with_template
          identifier: example_pipeline
          name: ExamplePipeline
          org: example_org
          project: example_project
          description: Pipeline Description
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          modules:
            - cd
          git_details:
            object_id: example_object
            branch_name: branch
            file_path: /folder/file.json
            repo_name: example_repository
            commit_id: abcd123
            file_url: www.repo/folder/file.com
            repo_url: www.repo.com
          valid: true
          yaml_error_wrapper:
            message: something is incorrect
            message_fqn: something is incorrect at pipeline.name
            stage_info:
              identifier: example_stage
              type: stage
              name: Example Stage
              fqn: pipeline.stages.stage
            step_info:
              identifier: example_step
              type: string
              name: string
              fqn: pipeline.steps.step
            fqn: pipeline.name
            hint_message: try changing something
          cache_response_metadata:
            cache_state: VALID_CACHE
            ttl_left: 9223372036854776000
            last_updated_at: 9223372036854776000
          created: 1234567890
          updated: 1234567890
      type: object
      properties:
        pipeline_yaml:
          type: string
          description: Pipeline YAML (returned as a String).
        template_applied_pipeline_yaml:
          type: string
          description: Pipeline YAML after resolving Templates (returned as a String).
        identifier:
          type: string
          description: Pipeline identifier
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
        name:
          type: string
          description: Pipeline name
          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$'
          minLength: 1
          maxLength: 128
        org:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Organization identifier
        project:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Project identifier
        description:
          type: string
          maxLength: 1024
          description: Pipeline description
        tags:
          type: object
          additionalProperties:
            type: string
          maxProperties: 128
          description: Pipeline tags
        modules:
          type: array
          description: Modules utilised in the Pipeline.
          uniqueItems: true
          items:
            type: string
        git_details:
          $ref: '#/components/schemas/GitDetails'
        valid:
          type: boolean
          description: Specifies whether Pipeline is a valid or not.
        yaml_error_wrapper:
          type: array
          description: YAML schema errors.
          items:
            $ref: '#/components/schemas/YAMLSchemaErrorWrapper'
        cache_response_metadata:
          $ref: '#/components/schemas/CacheResponseMetadataDTO'
        created:
          type: integer
          description: Creation timestamp for Pipeline.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for Pipeline.
          format: int64
        validation_uuid:
          type: string
          description: 'UUID of the asynchronous validation event started, if any'
    PipelineValidationResponseBody:
      title: Pipeline Validation Response Body
      description: Pipeline Validation Response Body
      x-examples:
        example-get:
          status: IN_PROGRESS
      type: object
      x-stoplight:
        id: 8qgpyeralha0k
      x-internal: true
      properties:
        status:
          type: string
          description: Status of the Pipeline Validation Event
        policy_eval:
          type: object
          description: Result of Policy Evaluations on the Pipeline
        start_ts:
          type: integer
          format: int64
          description: Start time of the Evaluation
        end_ts:
          type: integer
          format: int64
          description: End time of the Evaluation
        template_validation_response:
          $ref: '#/components/schemas/TemplateValidationResponseBody'
    PipelineValidationUUIDResponseBody:
      title: Pipeline Validation UUID Response Body
      description: Contains the UUID of the Pipeline Validation Event that's started
      x-examples:
        example-get:
          uuid: abcdef123
      type: object
      properties:
        uuid:
          type: string
          description: UUID of the Pipeline Validation Event
      x-internal: true
      x-stoplight:
        id: nevq4mquca0ye
    PipelineListResponseBody:
      title: Pipeline List Response Body
      x-stoplight:
        id: lsw5uulv1nabn
      description: Pipeline List response body
      x-examples:
        example-summary:
          identifier: example_pipeline
          name: Example Pipeline
          description: This is an Example Pipeline
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          created: 1234567890
          updated: 1234567890
          modules: CD
          recent_execution_info:
            - executor_info:
                trigger_type: NOOP
                username: harness_user
                email: noreply@harness.io
              execution_id: example_execution_identifier
              execution_status: Running
              started: 1234567890
              ended: 1234567890
              run_number: 5
          store_type: REMOTE
          connector_ref: example_connector
          valid: true
          git_details:
            object_id: example_object
            branch_name: branch
            file_path: /folder/file.json
            repo_name: example_repository
            commit_id: abcd123
            file_url: www.repo/folder/file.com
            repo_url: www.repo.com
      type: object
      properties:
        identifier:
          type: string
          description: Pipeline identifier
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
        name:
          type: string
          description: Pipeline name
          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$'
          minLength: 1
          maxLength: 128
        description:
          type: string
          maxLength: 1024
          description: Pipeline description
        tags:
          type: object
          additionalProperties:
            type: string
          maxProperties: 128
          description: Pipeline tags
        created:
          type: integer
          description: Creation timestamp for Pipeline.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for Pipeline.
          format: int64
        modules:
          type: array
          description: Modules utilised in the Pipeline.
          uniqueItems: true
          items:
            type: string
        recent_execution_info:
          type: array
          description: Array of recent Execution information
          items:
            $ref: '#/components/schemas/RecentExecutionInfo'
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not (for Git Experience).
          enum:
            - INLINE
            - REMOTE
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).
        valid:
          type: boolean
          description: Specifies whether Pipeline is a valid or not.
        git_details:
          $ref: '#/components/schemas/GitDetails'
        yaml_version:
          type: string
          x-stoplight:
            id: htwmtqt2riu9v
    TriggerRequestBody:
      title: Trigger Request Body
      type: object
      description: 'Trigger request body object '
      properties:
        description:
          type: string
        enabled:
          type: boolean
          description: boolean for enabling the trigger
        encrypted_webhook_secret_identifier:
          type: string
          description: encrypted webhook secret identifier
        identifier:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_]{0,127}$'
          description: Trigger identifier
        input_set_refs:
          type: array
          items:
            type: string
          description: list of input set identifiers that you want to use while executing the pipeline
        inputs:
          type: string
          description: input yaml to be used in the pipeline
        name:
          type: string
          pattern: '^[a-zA-Z_0-9-.][-0-9a-zA-Z_\s.]{0,127}$'
          description: trigger name
        pipeline_branch_name:
          type: string
          description: pipeline branch name in case of remote pipeline
        yaml:
          type: string
          description: trigger yaml
        stages_to_execute:
          type: array
          items:
            type: string
          description: list of stage identifiers of pipeline that you want to execute
        tags:
          type: object
          additionalProperties:
            type: string
          description: trigger tags
      required:
        - type
        - identifier
        - name
        - yaml
    NGVariable:
      title: NG Variable
      type: object
      properties:
        type:
          type: string
          enum:
            - String
            - Number
        description:
          type: string
        required:
          type: boolean
        name:
          type: string
        metadata:
          type: string
      discriminator:
        propertyName: type
        mapping:
          String: '#/components/schemas/StringNGVariable'
          Number: '#/components/schemas/NumberNGVariable'
    StringNGVariable:
      title: String NG Variable
      x-discriminator-value: String
      allOf:
        - $ref: '#/components/schemas/NGVariable'
        - type: object
          properties:
            value:
              type: string
            default_value:
              type: string
    NumberNGVariable:
      title: Number NG Variable
      x-discriminator-value: String
      allOf:
        - $ref: '#/components/schemas/NGVariable'
        - type: object
          properties:
            value:
              type: double
            default_value:
              type: double
    TriggerResponseBody:
      title: Trigger Response Body
      type: object
      description: Pipeline response body
      properties:
        identifier:
          type: string
          description: Trigger identifier
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
    TriggerGetResponseBody:
      title: Trigger Get Response Body
      description: Trigger response body.
      type: object
      properties:
        identifier:
          type: string
          description: Trigger identifier
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
        name:
          type: string
          description: Trigger name
          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$'
          minLength: 1
          maxLength: 128
        org:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Organization identifier
        project:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Project identifier
        pipeline:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Pipeline identifier
        description:
          type: string
          maxLength: 1024
          description: Trigger description
        trigger:
          $ref: '#/components/schemas/TriggerBody'
    TriggerBody:
      title: Trigger Body
      type: object
      description: 'Trigger object '
      properties:
        enabled:
          type: boolean
          description: boolean for enabling the trigger
        encrypted_webhook_secret_identifier:
          type: string
          description: encrypted webhook secret identifier
        input_set_refs:
          type: array
          items:
            type: string
          description: list of input set identifiers that you want to use while executing the pipeline
        inputs:
          type: string
          description: input yaml to be used in the pipeline
        pipeline_branch_name:
          type: string
          description: pipeline branch name in case of remote pipeline
        yaml:
          type: string
          description: trigger yaml
        stages_to_execute:
          type: array
          items:
            type: string
          description: list of stage identifiers of pipeline that you want to execute
        tags:
          type: object
          additionalProperties:
            type: string
          description: trigger tags
      required:
        - identifier
        - name
        - source
    PipelineCreateRequestBody:
      title: Pipeline Create Request Body
      x-stoplight:
        id: ki1pimm1mz2wv
      type: object
      description: 'Pipeline request body object '
      x-examples:
        example-pipeline:
          pipeline_yaml: |
            pipeline:
              identifier: example_pipeline
              name: ExamplePipeline
              allowStageExecutions: false
              stages:
                - stage:
                    name: Example Build Stage
                    identifier: example_build_stage
                    description: ''
                    type: Approval
                    spec:
                      execution:
                        steps:
                          - step:
                              name: Approval Step
                              identifier: Approval_Step
                              type: HarnessApproval
                              timeout: 1d
                              spec:
                                approvalMessage: |-
                                  Please review the following information
                                  and approve the pipeline progression
                                includePipelineExecutionHistory: true
                                approvers:
                                  minimumCount: 1
                                  disallowPipelineExecutor: false
                                  userGroups: <+input>
                                approverInputs: []
                          - step:
                              type: ShellScript
                              name: ShellScript Step
                              identifier: ShellScript_Step
                              spec:
                                shell: Bash
                                onDelegate: true
                                source:
                                  type: Inline
                                  spec:
                                    script: <+input>
                                environmentVariables: []
                                outputVariables: []
                                executionTarget: {}
                              timeout: 10m
                    tags: {}
                - stage:
                    name: Example Deploy Stage
                    identifier: example_deploy_stage
                    description: ''
                    type: Deployment
                    spec:
                      serviceConfig:
                        serviceRef: <+input>
                        serviceDefinition:
                          spec:
                            variables: []
                          type: Kubernetes
                      infrastructure:
                        environmentRef: <+input>
                        infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                            connectorRef: <+input>
                            namespace: <+input>
                            releaseName: release-<+INFRA_KEY>
                        allowSimultaneousDeployments: false
                      execution:
                        steps:
                          - step:
                              name: Rollout Deployment
                              identifier: rolloutDeployment
                              type: K8sRollingDeploy
                              timeout: 10m
                              spec:
                                skipDryRun: false
                        rollbackSteps:
                          - step:
                              name: Rollback Rollout Deployment
                              identifier: rollbackRolloutDeployment
                              type: K8sRollingRollback
                              timeout: 10m
                              spec: {}
                    tags: {}
                    failureStrategies:
                      - onFailure:
                          errors:
                            - AllErrors
                          action:
                            type: StageRollback
          identifier: example_pipeline
          name: ExamplePipeline
          description: Pipeline Description
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          git_details:
            branch_name: branch
            file_path: /folder/file.json
            commit_message: Added Harness Git Experience
            base_branch: old_branch
            connector_ref: git_connector
            store_type: REMOTE
            repo_name: example_repository
      properties:
        pipeline_yaml:
          type: string
          description: Pipeline YAML (to be passed as a String).
        identifier:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Pipeline identifier
        name:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Pipeline name
        description:
          type: string
          maxLength: 1024
          description: Pipeline description
        tags:
          type: object
          additionalProperties:
            type: string
          maxProperties: 128
          description: Pipeline tags
        git_details:
          $ref: '#/components/schemas/GitCreateDetails'
      required:
        - pipeline_yaml
        - identifier
        - name
    PipelineCreateResponseBody:
      title: Pipeline Create Response Body
      x-stoplight:
        id: s47hw1gh1wz51
      type: object
      description: Pipeline response body
      x-examples:
        example-pipeline:
          identifier: example_pipeline
      properties:
        identifier:
          type: string
          description: Pipeline identifier
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
    YAMLSchemaErrorWrapper:
      title: YAML Schema Error Wrapper
      x-stoplight:
        id: dsre88i7f0jqo
      type: object
      description: YAML schema error.
      properties:
        message:
          type: string
          description: Error message
        message_fqn:
          type: string
          description: Error message with FQN
        stage_info:
          $ref: '#/components/schemas/NodeInfo'
          description: Stage where the error occcurred.
        step_info:
          $ref: '#/components/schemas/NodeInfo'
          description: Step where the error occcurred.
        fqn:
          type: string
          description: Fully Qualified Name as per YAML
        hint_message:
          type: string
          description: Hint message
      x-examples:
        example-schema-error:
          message: something is incorrect
          message_fqn: something is incorrect at pipeline.name
          stage_info:
            identifier: example_stage
            type: stage
            name: Example Stage
            fqn: pipeline.stages.stage
          step_info:
            identifier: example_step
            type: string
            name: string
            fqn: pipeline.steps.step
          fqn: pipeline.name
          hint_message: try changing something
    NodeInfo:
      title: Entity Details
      x-stoplight:
        id: 5ydy6skg9yt6m
      type: object
      description: Entity details
      x-examples:
        example-node-info:
          identifier: example_stage
          type: stage
          name: name
          fqn: pipeline.stages.stage1.name
      properties:
        identifier:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Entity identifier
        type:
          type: string
          description: Type of Entity
        name:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Name of Entity
        fqn:
          type: string
          description: Fully Qualified Name
    RecentExecutionInfo:
      title: Recent Execution Information
      x-stoplight:
        id: eimd3luzvwzew
      type: object
      description: Recent Execution information of the Pipeline.
      properties:
        executor_info:
          $ref: '#/components/schemas/ExecutorInfo'
        execution_id:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Execution identifier
        execution_status:
          type: string
          description: Last Execution status of the Pipeline.
          enum:
            - Running
            - AsyncWaiting
            - TaskWaiting
            - TimedWaiting
            - Failed
            - Errored
            - IgnoreFailed
            - NotStarted
            - Expired
            - Aborted
            - Discontinuing
            - Queued
            - Paused
            - ResourceWaiting
            - InterventionWaiting
            - ApprovalWaiting
            - Success
            - Suspended
            - Skipped
            - Pausing
            - ApprovalRejected
            - InputWaiting
            - NOT_STARTED
            - INTERVENTION_WAITING
            - APPROVAL_WAITING
            - APPROVAL_REJECTED
            - Waiting
        started:
          type: integer
          format: int64
          description: Start timestamp of Execution
        ended:
          type: integer
          format: int64
          description: End timestamp of Execution
        run_number:
          type: integer
          format: int32
          description: The Execution number of this Pipeline.
          example: 0
        parent_stage_info:
          $ref: '#/components/schemas/ParentStageInfo'
      x-examples:
        example-recent:
          executor_info:
            trigger_type: NOOP
            username: harness_user
            email: noreply@harness.io
          execution_id: example_execution_identifier
          execution_status: Running
          started: 1234567890
          ended: 1234567890
          run_number: 5
    ExecutorInfo:
      title: Executor Information
      x-stoplight:
        id: d78wbfpdm3xhy
      type: object
      description: Information regarding Executor of Pipeline.
      properties:
        trigger_type:
          type: string
          description: Trigger type
          enum:
            - NOOP
            - MANUAL
            - WEBHOOK
            - WEBHOOK_CUSTOM
            - SCHEDULER_CRON
        username:
          type: string
          description: Username of the Executor.
        email:
          type: string
          description: Email address of the Executor.
      x-examples:
        example-executor:
          trigger_type: NOOP
          username: harness_user
          email: noreply@harness.io
    GitCreateDetails:
      title: Create Git Details
      x-stoplight:
        id: p1h9vvkuks7kq
      type: object
      description: Contains parameters related to creating an Entity for Git Experience.
      x-examples:
        example-create-git:
          branch_name: branch
          file_path: /folder/file.json
          commit_message: Added Harness Git Experience
          base_branch: old_branch
          connector_ref: git_connector
          store_type: REMOTE
          repo_name: example_repository
      properties:
        branch_name:
          type: string
          description: Name of the branch.
        file_path:
          type: string
          description: File path of the Entity in the repository.
        commit_message:
          type: string
          description: Commit message used for the merge commit.
        base_branch:
          type: string
          description: Name of the default branch (this checks out a new branch titled by branch_name).
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations on the Entity.
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not.
          enum:
            - INLINE
            - REMOTE
        repo_name:
          type: string
          description: Name of the repository.
    GitUpdateDetails:
      title: Update Git Details
      x-stoplight:
        id: w2ue8wampbxe3
      type: object
      description: Contains parameters related to updating an Entity for Git Experience.
      x-examples:
        example-update-git:
          branch_name: branch
          commit_message: Added Harness Git Experience
          last_object_id: abcdXYZ
          base_branch: old_branch
          last_commit_id: abcdXYZ
          connector_ref: git_connector
          store_type: REMOTE
          repo_name: example_repository
          file_path: /folder/file.json
      properties:
        branch_name:
          type: string
          description: Name of the branch.
        commit_message:
          type: string
          description: Commit message used for the merge commit.
        last_object_id:
          type: string
          description: Last object identifier (for Github only).
        base_branch:
          type: string
          description: Name of the default branch (this checks out a new branch titled by branch_name).
        last_commit_id:
          type: string
          description: Last commit identifier.
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations on the Entity.
        store_type:
          type: string
          enum:
            - INLINE
            - REMOTE
          description: Specifies whether the Entity is to be stored in Git or not.
        repo_name:
          type: string
          description: Name of the repository.
        file_path:
          type: string
    PipelineUpdateRequestBody:
      title: Pipeline Update Request Body
      x-stoplight:
        id: absy9cmawcwlh
      type: object
      description: 'Pipeline request body object '
      x-examples:
        example-pipeline:
          pipeline_yaml: |
            pipeline:
              identifier: example_pipeline
              name: ExamplePipeline
              allowStageExecutions: false
              stages:
                - stage:
                    name: Example Build Stage
                    identifier: example_build_stage
                    description: ''
                    type: Approval
                    spec:
                      execution:
                        steps:
                          - step:
                              name: Approval Step
                              identifier: Approval_Step
                              type: HarnessApproval
                              timeout: 1d
                              spec:
                                approvalMessage: |-
                                  Please review the following information
                                  and approve the pipeline progression
                                includePipelineExecutionHistory: true
                                approvers:
                                  minimumCount: 1
                                  disallowPipelineExecutor: false
                                  userGroups: <+input>
                                approverInputs: []
                          - step:
                              type: ShellScript
                              name: ShellScript Step
                              identifier: ShellScript_Step
                              spec:
                                shell: Bash
                                onDelegate: true
                                source:
                                  type: Inline
                                  spec:
                                    script: <+input>
                                environmentVariables: []
                                outputVariables: []
                                executionTarget: {}
                              timeout: 10m
                    tags: {}
                - stage:
                    name: Example Deploy Stage
                    identifier: example_deploy_stage
                    description: ''
                    type: Deployment
                    spec:
                      serviceConfig:
                        serviceRef: <+input>
                        serviceDefinition:
                          spec:
                            variables: []
                          type: Kubernetes
                      infrastructure:
                        environmentRef: <+input>
                        infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                            connectorRef: <+input>
                            namespace: <+input>
                            releaseName: release-<+INFRA_KEY>
                        allowSimultaneousDeployments: false
                      execution:
                        steps:
                          - step:
                              name: Rollout Deployment
                              identifier: rolloutDeployment
                              type: K8sRollingDeploy
                              timeout: 10m
                              spec:
                                skipDryRun: false
                        rollbackSteps:
                          - step:
                              name: Rollback Rollout Deployment
                              identifier: rollbackRolloutDeployment
                              type: K8sRollingRollback
                              timeout: 10m
                              spec: {}
                    tags: {}
                    failureStrategies:
                      - onFailure:
                          errors:
                            - AllErrors
                          action:
                            type: StageRollback
          identifier: example_pipeline
          name: ExamplePipeline
          description: Pipeline Description
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          git_details:
            branch_name: branch
            commit_message: Added Harness Git Experience
            last_object_id: abcdXYZ
            base_branch: old_branch
            last_commit_id: abcdXYZ
            connector_ref: git_connector
            store_type: REMOTE
            repo_name: example_repository
      properties:
        pipeline_yaml:
          type: string
          description: Pipeline YAML (to be passed as a String).
        identifier:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Pipeline identifier
        name:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Pipeline name
        description:
          type: string
          maxLength: 1024
          description: Pipeline description
        tags:
          type: object
          additionalProperties:
            type: string
          maxProperties: 128
          description: Pipeline tags
        git_details:
          $ref: '#/components/schemas/GitUpdateDetails'
      required:
        - pipeline_yaml
        - identifier
        - name
    CacheResponseMetadataDTO:
      title: CacheResponseMetadataDTO
      x-stoplight:
        id: 5twby12bhyems
      type: object
      x-examples:
        example-1:
          cache_state: VALID_CACHE
          ttl_left: 9223372036854776000
          last_updated_at: 9223372036854776000
      properties:
        cache_state:
          type: string
          enum:
            - VALID_CACHE
            - STALE_CACHE
            - UNKNOWN
          description: Tells the state of cache.
        ttl_left:
          type: integer
          format: int64
          description: Time left till cache expriry.
        last_updated_at:
          type: integer
          format: int64
          description: Time when the cache was last updated at.
        is_sync_enabled:
          type: boolean
    InputSetCreateRequestBody:
      title: Input Set Create Request Body
      x-stoplight:
        id: hfnoy3get13qj
      type: object
      description: Input Set create request body
      x-examples:
        example-input-set:
          input_set_yaml: |-
            inputSet:
                pipeline:
                    identifier: Example_Pipeline
                    stages:
                        - stage:
                              identifier: Example_Stage
                              type: Approval
                              spec:
                                  execution:
                                      steps:
                                          - step:
                                                identifier: Approval_Step
                                                type: HarnessApproval
                                                spec:
                                                    approvers:
                                                        userGroups:
                                                            - account.Admins
                                          - step:
                                                identifier: Shellscript_Step
                                                type: ShellScript
                                                spec:
                                                    source:\n                                            type: Inline
                                                        spec:\n                                                script: echo "ShellScript"
                        - stage:
                              identifier: Sample_Deploy_Stage
                              type: Deployment
                              spec:
                                  serviceConfig:
                                      serviceRef: Service1
                                  infrastructure:
                                      environmentRef: Env1
                                      infrastructureDefinition:
                                          type: KubernetesDirect
                                          spec:
                                              connectorRef: account.harnessciplatform
                                              namespace: sample
          identifier: example_input_set
          name: ExampleInputSet
          description: Input Set Description
          tags:
            property1: example-tag-1-value
            property2: example-tag-2-value
          git_details:
            branch_name: branch
            file_path: /folder/file.json
            commit_message: Added Harness Git Experience
            base_branch: old_branch
            connector_ref: git_connector
            store_type: INLINE
            repo_name: example_repository
      properties:
        input_set_yaml:
          type: string
          description: Input Set YAML (to be passed as a String).
        identifier:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Input Set identifier
        name:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Input Set name
        description:
          type: string
          maxLength: 1024
          description: Input Set description
        tags:
          type: object
          additionalProperties:
            type: string
          maxProperties: 128
          description: Input Set tags
        git_details:
          $ref: '#/components/schemas/GitCreateDetails'
      required:
        - input_set_yaml
        - identifier
        - name
    InputSetResponseBody:
      title: Input Set Response Body
      x-stoplight:
        id: m7pdwmno1ezas
      type: object
      description: Response body for Input Set
      properties:
        input_set_yaml:
          type: string
          description: Input Set YAML (returned as a String).
        identifier:
          type: string
          description: Input Set identifier
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
        name:
          type: string
          description: Input Set name
          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$'
          minLength: 1
          maxLength: 128
        org:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Organization identifier
        project:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Project identifier
        pipeline:
          type: string
          description: Pipeline identifier
        description:
          type: string
          maxLength: 1024
          description: Input Set description
        tags:
          type: object
          additionalProperties:
            type: string
          maxProperties: 128
          description: Input Set tags
        store_type:
          type: string
          description: Specifies whether the Entity is to be stored in Git or not (for Git Experience).
          enum:
            - INLINE
            - REMOTE
        connector_ref:
          type: string
          description: Identifier of the Harness Connector used for CRUD operations on the Entity (for Git Experience).
        git_details:
          $ref: '#/components/schemas/GitDetails'
        created:
          type: integer
          description: Creation timestamp for Input Set.
          format: int64
        updated:
          type: integer
          description: Last modification timestamp for Input Set.
          format: int64
        error_details:
          $ref: '#/components/schemas/InputSetErrorDetails'
      x-examples:
        example-input-set:
          input_set_yaml: example_input_set_yaml
          identifier: example_input_set
          name: Example Input Set
          org: example_org
          project: example_project
          description: InputSet Description
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          git_details:
            object_id: example_object
            branch_name: branch
            file_path: /folder/file.json
            repo_name: example_repository
            commit_id: abcd123
            file_url: www.repo/folder/file.com
            repo_url: www.repo.com
          created: 1234567890
          updated: 9876543210
          error_details:
            valid: false
            message: Some fields in the Input Set are invalid.
            outdated: true
            error_pipeline_yaml: |
              serviceConfig: "pipeline.stages.example_deploy_stage.spec.serviceConfig"
            fqn_errors:
              - fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig
                errors:
                  - field_name: serviceConfig
                    message: Field not a runtime input
                    identifier_of_error_source: example_input_set
            invalid_refs:
              - example_invalid_input_set
    InputSetErrorDetails:
      title: Input Set Error Details
      x-stoplight:
        id: j6yjxio0v44pz
      type: object
      description: Error details regarding Input Sets.
      properties:
        valid:
          type: boolean
          description: Specifies whether Input Set is a valid or not.
        message:
          type: string
          description: Failure message for Input Set.
        outdated:
          type: boolean
          description: Input Set is outdated with respect to the Pipeline or not.
        error_pipeline_yaml:
          type: string
          description: 'If an Input Set save fails, this field contains the Pipeline YAML as a String, with the field values replaced by a UUID.'
        fqn_errors:
          type: array
          items:
            $ref: '#/components/schemas/FQNtoError'
        invalid_refs:
          type: array
          description: List of Input Set References that are invalid.
          items:
            type: string
      x-examples:
        example-input-set-err:
          valid: false
          message: Some fields in the Input Set are invalid.
          outdated: true
          error_pipeline_yaml: |
            serviceConfig: "pipeline.stages.example_deploy_stage.spec.serviceConfig"
          fqn_errors:
            - fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig
              errors:
                - field_name: serviceConfig
                  message: Field not a runtime input
                  identifier_of_error_source: example_input_set
          invalid_refs:
            - example_invalid_input_set
    FQNtoError:
      title: FQN to Error
      x-stoplight:
        id: 4yvwluj5l5tcw
      type: object
      description: FQN to error response mapper.
      x-examples:
        example-fqn-map:
          fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig
          errors:
            - field_name: serviceConfig
              message: Field not a runtime input
              identifier_of_error_source: example_input_set
      properties:
        fqn:
          type: string
          description: Fully Qualified Name
        errors:
          type: array
          description: Errors in FQN
          items:
            $ref: '#/components/schemas/InputSetError'
    InputSetError:
      title: Input Set Error
      x-stoplight:
        id: 9atcdjaoot327
      type: object
      description: Input Set error
      properties:
        field_name:
          type: string
          description: Field name that has an error.
        message:
          type: string
          description: Error description
        identifier_of_error_source:
          type: string
          description: Identifier of Input Set
      x-examples:
        example-error:
          field_name: serviceConfig
          message: Field not a runtime input
          identifier_of_error_source: example_input_set
    InputSetUpdateRequestBody:
      title: Input Set Update Request Body
      x-stoplight:
        id: fabr7ionj09g2
      type: object
      description: Input Set update request body
      x-examples:
        example-input-set:
          input_set_yaml: |-
            inputSet:
                pipeline:
                    identifier: Example_Pipeline
                    stages:
                        - stage:
                              identifier: Example_Stage
                              type: Approval
                              spec:
                                  execution:
                                      steps:
                                          - step:
                                                identifier: Approval_Step
                                                type: HarnessApproval
                                                spec:
                                                    approvers:
                                                        userGroups:
                                                            - account.Admins
                                          - step:
                                                identifier: Shellscript_Step
                                                type: ShellScript
                                                spec:
                                                    source:\n                                            type: Inline
                                                        spec:\n                                                script: echo "ShellScript"
                        - stage:
                              identifier: Sample_Deploy_Stage
                              type: Deployment
                              spec:
                                  serviceConfig:
                                      serviceRef: Service1
                                  infrastructure:
                                      environmentRef: Env1
                                      infrastructureDefinition:
                                          type: KubernetesDirect
                                          spec:
                                              connectorRef: account.harnessciplatform
                                              namespace: sample
          identifier: example_input_set
          name: ExampleInputSet
          description: Input Set Description
          tags:
            property1: example-tag-1-value
            property2: example-tag-2-value
          git_details:
            branch_name: branch
            commit_message: Added Harness Git Experience
            last_object_id: abcdXYZ
            base_branch: old_branch
            last_commit_id: abcdXYZ
            parent_entity_connector_ref: git_connector
            parent_entity_repo_name: example_repository
      properties:
        input_set_yaml:
          type: string
          description: Input Set YAML (to be passed as a String).
        identifier:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z_$]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Input Set identifier
        name:
          type: string
          pattern: '^[a-zA-Z_][0-9a-zA-Z-_ ]{0,127}$'
          minLength: 1
          maxLength: 128
          description: Input Set name
        description:
          type: string
          maxLength: 1024
          description: Input Set description
        tags:
          type: object
          additionalProperties:
            type: string
          maxProperties: 128
          description: Input Set tags
        git_details:
          $ref: '#/components/schemas/InputSetGitUpdateDetails'
      required:
        - input_set_yaml
        - identifier
        - name
    InputSetGitUpdateDetails:
      title: InputSetGitUpdateDetails
      x-stoplight:
        id: 2e3jt6zjdns5c
      type: object
      description: Contains parameters related to updating an Input Set for Git Experience.
      x-examples:
        example-update-git:
          branch_name: branch
          commit_message: Added Harness Git Experience
          last_object_id: abcdXYZ
          base_branch: old_branch
          last_commit_id: abcdXYZ
          parent_entity_connector_ref: git_connector
          parent_entity_repo_name: example_repository
      properties:
        branch_name:
          type: string
          description: Name of the branch.
        commit_message:
          type: string
          description: Commit message used for the merge commit.
        last_object_id:
          type: string
          description: Last object identifier (for Github only).
        base_branch:
          type: string
          description: Name of the default branch (this checks out a new branch titled by branch_name).
        last_commit_id:
          type: string
          description: Last commit identifier.
        parent_entity_connector_ref:
          type: string
          description: Connector reference for Parent Entity (Pipeline).
        parent_entity_repo_name:
          type: string
          description: Repository name for Parent Entity (Pipeline).
    InputsResponseBody:
      title: Inputs Response Body
      x-stoplight:
        id: 4z3551erzja4j
      type: object
      properties:
        inputs:
          type: object
        options:
          type: object
          properties:
            clone:
              type: object
              properties:
                ref:
                  type: object
                  properties:
                    type:
                      type: object
                    name:
                      type: object
      x-examples:
        example-inputs-response:
          inputs:
            key1:
              prompt: false
              required: false
              default: golang
              type: string
              desc: sample desc
            key2:
              prompt: true
              required: true
              type: string
              desc: sample desc
            key3:
              prompt: false
              required: false
              type: number
            key4:
              prompt: false
              required: true
              type: secret
              desc: sample desc
              enums:
                - enum1
                - enum2
          options:
            clone:
              ref:
                type:
                  prompt: false
                  required: true
                  type: string
                  enums:
                    - enum1
                    - enum2
                    - enum3
                name:
                  prompt: false
                  required: true
                  type: string
      description: Response Body for Pipeline Inputs
    ParentStageInfo:
      title: ParentStageInfo
      x-stoplight:
        id: 80uqgqamjxdru
      type: object
      description: 'Information about parent pipeline '
      properties:
        has_parent_pipeline:
          type: boolean
          description: boolean to describe whether or not this was executed through pipeline chaining
        execution_id:
          type: string
          description: planExecutionId of parent pipeline execution
        identifier:
          type: string
          description: pipeline identifier of parent pipeline
        project_id:
          type: string
          description: project identifier
        org_id:
          type: string
          description: org identifier
        run_sequence:
          type: integer
          description: run sequence of parent pipeline execution
          format: int32
        stage_node_id:
          type: string
          description: node id of parent pipeline stage
    PipelineMoveConfigRequestBody:
      title: PipelineMoveConfigRequestBody
      x-stoplight:
        id: 40ab40q26bqpi
      type: object
      description: Request body for moving a pipeline configuration
      properties:
        git_details:
          $ref: '#/components/schemas/GitMoveDetails'
        pipeline_identifier:
          type: string
        move_config_operation_type:
          $ref: '#/components/schemas/MoveConfigOperationType'
    PipelineMoveConfigResponseBody:
      title: PipelineMoveConfigResponseBody
      x-stoplight:
        id: 8ejb0wt7w9or0
      type: object
      description: Response body for configuration to move a pipeline
      properties:
        pipeline_identifier:
          type: string
    MoveConfigOperationType:
      type: string
      enum:
        - INLINE_TO_REMOTE
      description: Operation type to move the configuration
      x-stoplight:
        id: 2x10v7rnqfd1z
    GitMoveDetails:
      title: Move Git Details
      x-stoplight:
        id: ua9qwi7im72e0
      type: object
      description: Parameters related to moving an entity for Git Experience.
      x-examples:
        example-create-git:
          branch_name: branch
          file_path: /folder/file.json
          commit_message: Added Harness Git Experience
          base_branch: old_branch
          connector_ref: git_connector
          repo_name: example_repository
      properties:
        branch_name:
          type: string
          description: 'Name of the branch. When moving an inline pipeline or a remote pipeline, this branch is where the remote entity is created or fetched.'
        file_path:
          type: string
          description: File path of the entity in the repository.
        commit_message:
          type: string
          description: Merge commit message.
        base_branch:
          type: string
          description: Default branch name. This checks out the branch titled branch_name
        connector_ref:
          type: string
          description: Harness connector id used for entity CRUD operations
        repo_name:
          type: string
          description: Name of the repository.
    InputSetMoveConfigRequestBody:
      title: InputSetMoveConfigRequestBody
      x-stoplight:
        id: hbpsqgtaa47pp
      type: object
      description: Request body for moving an input set configuration.
      properties:
        git_details:
          $ref: '#/components/schemas/GitMoveDetails'
        pipeline_identifier:
          type: string
        input_set_identifier:
          type: string
        move_config_operation_type:
          $ref: '#/components/schemas/MoveConfigOperationType'
    InputSetMoveConfigResponseBody:
      title: InputSetMoveConfigResponseBody
      x-stoplight:
        id: woxjkwo633gvx
      type: object
      properties:
        input_set_identifier:
          type: string
      description: Response body for moving an input set configuration.
    TemplateValidationResponseBody:
      title: TemplateValidationResponseBody
      x-stoplight:
        id: denbevwv3x29j
      type: object
      description: Has Template Resolution Response.
      properties:
        valid_yaml:
          type: boolean
        exception_message:
          type: string
    GitImportInfo:
      title: Import Git Information
      x-stoplight:
        id: 2ij8fppk6n5pq
      type: object
      properties:
        connector_ref:
          type: string
        repo_name:
          type: string
        branch_name:
          type: string
        file_path:
          type: string
        is_force_import:
          type: boolean
      description: Parameters related to importing an entity for Git.
    PipelineImportRequestDTO:
      title: Pipeline Import Request DTO
      x-stoplight:
        id: 1e56a99h5vzml
      type: object
      description: Information of Pipeline import request DTO
      properties:
        pipeline_name:
          type: string
        pipeline_description:
          type: string
    PolicyMetadata:
      title: Policy Metadata
      x-stoplight:
        id: f527uz6isgxm2
      type: object
      description: Information about the policy metadata
      properties:
        policy_identifier:
          type: string
        policy_name:
          type: string
        severity:
          type: string
        deny_messages:
          type: array
          items:
            type: string
        status:
          type: string
        identifier:
          type: string
        account_identifier:
          type: string
        org_identifier:
          type: string
        project_identifier:
          type: string
        created:
          type: integer
          format: int64
        updated:
          type: integer
          format: int64
        error:
          type: string
    PolicySetMetadata:
      title: Policy Set Metadata
      x-stoplight:
        id: 1m0wy5qg0fmpo
      type: object
      properties:
        policy_set_identifier:
          type: string
        deny:
          type: boolean
        policy_metadata:
          type: array
          items:
            $ref: '#/components/schemas/PolicyMetadata'
        policy_set:
          type: string
        status:
          type: string
        identifier:
          type: string
        created:
          type: integer
          format: int64
        account_identifier:
          type: string
        org_identifier:
          type: string
        project_identifier:
          type: string
      description: Information about the policy set metadata
    GovernanceMetadata:
      title: Governance Metadata
      x-stoplight:
        id: d9wv9dvdrbadd
      type: object
      description: Information about the governance metadata
      properties:
        identifier:
          type: string
        deny:
          type: boolean
        policy_set_metadata:
          type: array
          items:
            $ref: '#/components/schemas/PolicySetMetadata'
        message:
          type: string
        time_stamp:
          type: integer
        status:
          type: string
        account_identifier:
          type: string
        org_identifier:
          type: string
        project_identifier:
          type: string
        entity:
          type: string
        type:
          type: string
        action:
          type: string
        created:
          type: integer
          format: int64
    PipelineSaveResponseBody:
      title: Pipeline Save Response Body
      x-stoplight:
        id: de14096mwangs
      type: object
      properties:
        identifier:
          type: string
        governance_metadata:
          type: array
          items:
            $ref: '#/components/schemas/GovernanceMetadata'
      description: Response body for pipeline save.
    PipelineImportRequestBody:
      title: PipelineImportRequestBody
      x-stoplight:
        id: o9o6zlh7psa3i
      type: object
      description: Pipeline import request body
      properties:
        git_import_info:
          $ref: '#/components/schemas/GitImportInfo'
        pipeline_import_request:
          $ref: '#/components/schemas/PipelineImportRequestDTO'
    InputSetImportRequestDTO:
      title: InputSet Import Request DTO
      x-stoplight:
        id: hlxg38s24kl9b
      type: object
      description: Information of InputSet import request DTO
      properties:
        input_set_name:
          type: string
        input_set_description:
          type: string
    InputSetImportRequestBody:
      title: InputSet Import Request Body
      x-stoplight:
        id: x16rcmbrso6vs
      type: object
      description: InputSet import request body
      properties:
        git_import_info:
          $ref: '#/components/schemas/GitImportInfo'
        input_set_import_request:
          $ref: '#/components/schemas/InputSetImportRequestDTO'
    InputSetImportResponseBody:
      title: InputSet Import Response Body
      x-stoplight:
        id: odidua3xtfk6i
      type: object
      properties:
        input_set_identifier:
          type: string
      description: Response body for Input Set import.
    ApprovalInstanceResponseBody:
      title: Approval Instance Response Body
      x-stoplight:
        id: ubh9jlp80zh5z
      type: object
      description: Response body for Approval Instance
      properties:
        id:
          type: string
          description: Approval Instance identifier
        type:
          type: string
          enum:
            - HarnessApproval
            - JiraApproval
            - CustomApproval
            - ServiceNowApproval
          description: Tells the type of Approval
        status:
          type: string
          enum:
            - WAITING
            - APPROVED
            - REJECTED
            - FAILED
            - ABORTED
            - EXPIRED
          description: Tells the status of Approval
        deadline:
          type: integer
          format: int64
          description: Deadline timestamp for Approval Instance
        created:
          type: integer
          format: int64
          description: Creation timestamp for Approval Instance
        updated:
          type: integer
          format: int64
          description: Last modification timestamp for Approval Instance
        error_message:
          type: string
          description: Error message for the Approval Instance
        details:
          type: object
          description: Approval Instance response details
      x-examples:
        example-approval-instance:
          id: example_approval_instance
          type: HarnessApproval
          status: WAITING
          deadline: 1683953545329
          details:
            approvalMessage: |-
              Please review the following information
              and approve the pipeline progression
            includePipelineExecutionHistory: true
            approvers:
              userGroups:
                - example_usergroup_1
                - example_usergroup_2
              minimumCount: 3
              disallowPipelineExecutor: false
            approvalActivities: []
            approverInputs:
              - name: example_input_1
                defaultValue: example_value_1
              - name: example_input_2
                defaultValue: example_value_2
            validatedApprovalUserGroups:
              - accountIdentifier: example_account_identifier
                orgIdentifier: example_org_identifier
                projectIdentifier: example_project_identifier
                identifier: example_usergroup_1
                name: Example Usergroup 1
              - accountIdentifier: example_account_identifier
                orgIdentifier: example_org_identifier
                projectIdentifier: example_project_identifier
                identifier: example_usergroup_2
                name: Example Usergroup 2
            autoRejectEnabled: false
          created: 1683867145351
          updated: 1683867145351
          error_message: example error message
    GitMetadataUpdateRequestBody:
      title: GitMetadataUpdateRequestBody
      x-stoplight:
        id: bpd31demfes1n
      type: object
      properties:
        connector_ref:
          type: string
          description: Harness connector id used for entity CRUD operations
        repo_name:
          type: string
          description: Name of the repository.
        file_path:
          type: string
          description: File path of the entity in the repository.
    GitMetadataUpdateResponseBody:
      title: GitMetadataUpdateResponseBody
      x-stoplight:
        id: prhslxb264y5j
      type: object
      properties:
        entity_identifier:
          type: string
          description: identifier of updated entity
    IndividualSchemaResponseBody:
      title: IndividualSchemaResponseBody
      x-stoplight:
        id: z5u0bvvwtwv3w
      type: object
      description: Individual Schema Response Body
      x-internal: true
      properties:
        data:
          type: object
          x-stoplight:
            id: m3ma1uwbvlcyt
    PipelineExecuteResponseBody:
      title: PipelineExecuteResponseBody
      x-stoplight:
        id: 7f3w495na9uc6
      type: object
      properties:
        execution_details:
          $ref: '#/components/schemas/ExecutionDetails'
    ExecutionDetails:
      title: ExecutionDetails
      x-stoplight:
        id: f2p80clmj9zbp
      type: object
      properties:
        execution_id:
          type: string
          x-stoplight:
            id: 72jgik3plepuq
        status:
          type: string
          x-stoplight:
            id: opwkl1ou4xt4t
    StepsDataResponseBody:
      title: StepCategory
      type: object
      properties:
        name:
          type: string
        steps_data:
          type: array
          items:
            $ref: '#/components/schemas/StepData'
        step_categories:
          type: array
          items:
            $ref: '#/components/schemas/StepsDataResponseBody'
    StepData:
      title: StepData
      type: object
      properties:
        name:
          type: string
        type:
          type: string
        disabled:
          type: boolean
        feature_restriction_name:
          type: string
    PipelineInputSchemaDetailsResponseBody:
      title: PipelineInputSchemaDetailsResponseBody
      x-stoplight:
        id: co8bohmf8u67s
      type: object
      properties:
        inputs:
          type: array
          x-stoplight:
            id: rv34g6sdke4aq
          items:
            $ref: '#/components/schemas/PipelineYamlInputDetailsDTO'
      x-internal: true
    PipelineYamlInputDTO:
      title: PipelineYamlInputDTO
      x-stoplight:
        id: j1c529ovpjf5q
      type: object
      x-internal: true
      properties:
        name:
          type: string
          x-stoplight:
            id: hr91fnxdcpjzc
        type:
          $ref: '#/components/schemas/YamlInputType'
        desc:
          type: string
          x-stoplight:
            id: 2bdrkmmuar6ib
        required:
          type: boolean
          x-stoplight:
            id: 42ysx1saehpxq
        execution:
          type: boolean
        default:
          type: object
          x-stoplight:
            id: atteophbixtmw
        allowed_values:
          type: array
          x-stoplight:
            id: 50zz7pi9ytnbk
          items: {}
        regex:
          type: string
    YamlInputType:
      title: YamlInputType
      x-stoplight:
        id: o6cijx3ivx8gt
      enum:
        - string
        - integer
        - boolean
        - object
        - array
      x-internal: true
      description: ''
    PipelineYamlInputMetadataDTO:
      title: PipelineYamlInputMetadataDTO
      x-stoplight:
        id: yk631xqn5u1jc
      type: object
      x-internal: true
      properties:
        field_properties:
          $ref: '#/components/schemas/InputDetailsDTO'
        dependencies:
          $ref: '#/components/schemas/YamlInputDependencyDetailsDTO'
    InputDetailsDTO:
      title: InputDetailsDTO
      x-stoplight:
        id: kt1gm8g8pagzv
      type: object
      x-internal: true
      properties:
        input_type:
          type: string
          x-stoplight:
            id: 5g0eseqsft1f9
        entity_group:
          type: string
        entity_type:
          type: string
        path:
          type: string
    RuntimeInputDependencyDetailsDTO:
      title: RuntimeInputDependencyDetailsDTO
      x-stoplight:
        id: fukqvqy40uok7
      type: object
      x-internal: true
      properties:
        field_name:
          type: string
          x-stoplight:
            id: fxj0ropbbfu5c
        input_name:
          type: string
          x-stoplight:
            id: uz01uwaj14sqy
        entity_group:
          type: string
        entity_type:
          type: string
        path:
          type: string
    FixedValueFieldDependencyDetailsDTO:
      title: FixedValueFieldDependencyDetailsDTO
      x-stoplight:
        id: wqpw6sg4kvy1q
      type: object
      x-internal: true
      properties:
        field_name:
          type: string
          x-stoplight:
            id: 9pmpuigyyzzkq
        field_input_type:
          type: string
          x-stoplight:
            id: x94mlk7uif3wv
        field_value:
          type: object
          x-stoplight:
            id: 3u7y8eh38sopc
    YamlInputDependencyDetailsDTO:
      title: YamlInputDependencyDetailsDTO
      x-stoplight:
        id: 8ngi5i41cs8x6
      type: object
      x-internal: true
      properties:
        required_runtime_inputs:
          type: array
          x-stoplight:
            id: mk7hl635ctlbp
          items:
            $ref: '#/components/schemas/RuntimeInputDependencyDetailsDTO'
        required_fixed_values:
          type: array
          x-stoplight:
            id: rxhqqj5687rxt
          items:
            $ref: '#/components/schemas/FixedValueFieldDependencyDetailsDTO'
    PipelineYamlInputDetailsDTO:
      title: PipelineYamlInputDetailsDTO
      x-stoplight:
        id: kcrjx6uyll1zn
      type: object
      properties:
        details:
          $ref: '#/components/schemas/PipelineYamlInputDTO'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/PipelineYamlInputMetadataDTO'
      x-internal: true
    StepPalleteFilterRequestBody:
      title: StepPalleteFilterWrapper
      type: object
      properties:
        step_pallete_module_infos:
          type: array
          items:
            $ref: '#/components/schemas/StepPalleteModuleInfo'
        version:
          type: string
    StepPalleteModuleInfo:
      title: StepPalleteModuleInfo
      type: object
      properties:
        module:
          type: string
        category:
          type: string
        should_show_common_steps:
          type: boolean
        common_step_category:
          type: string
    PipelineInputsSchemaRequestBody:
      title: PipelineInputsSchemaRequestBody
      x-stoplight:
        id: t682vl8ozjbb4
      type: object
      properties:
        pipeline_yaml:
          type: string
          x-stoplight:
            id: chyfblx24j09j
    PipelinePatchRequestBody:
      title: PipelinePatchRequestBody
      x-stoplight:
        id: p4sz6g5x1vefu
      type: object
      x-examples:
        Example 1:
          pipeline_yaml: |
            pipeline:
              identifier: example_pipeline
              name: ExamplePipeline
              allowStageExecutions: false
              stages:
                - stage:
                    name: Example Build Stage
                    identifier: example_build_stage
                    description: ''
                    type: Approval
                    spec:
                      execution:
                        steps:
                          - step:
                              name: Approval Step
                              identifier: Approval_Step
                              type: HarnessApproval
                              timeout: 1d
                              spec:
                                approvalMessage: |-
                                  Please review the following information
                                  and approve the pipeline progression
                                includePipelineExecutionHistory: true
                                approvers:
                                  minimumCount: 1
                                  disallowPipelineExecutor: false
                                  userGroups: <+input>
                                approverInputs: []
                          - step:
                              type: ShellScript
                              name: ShellScript Step
                              identifier: ShellScript_Step
                              spec:
                                shell: Bash
                                onDelegate: true
                                source:
                                  type: Inline
                                  spec:
                                    script: <+input>
                                environmentVariables: []
                                outputVariables: []
                                executionTarget: {}
                              timeout: 10m
                    tags: {}
                - stage:
                    name: Example Deploy Stage
                    identifier: example_deploy_stage
                    description: ''
                    type: Deployment
                    spec:
                      serviceConfig:
                        serviceRef: <+input>
                        serviceDefinition:
                          spec:
                            variables: []
                          type: Kubernetes
                      infrastructure:
                        environmentRef: <+input>
                        infrastructureDefinition:
                          type: KubernetesDirect
                          spec:
                            connectorRef: <+input>
                            namespace: <+input>
                            releaseName: release-<+INFRA_KEY>
                        allowSimultaneousDeployments: false
                      execution:
                        steps:
                          - step:
                              name: Rollout Deployment
                              identifier: rolloutDeployment
                              type: K8sRollingDeploy
                              timeout: 10m
                              spec:
                                skipDryRun: false
                        rollbackSteps:
                          - step:
                              name: Rollback Rollout Deployment
                              identifier: rollbackRolloutDeployment
                              type: K8sRollingRollback
                              timeout: 10m
                              spec: {}
                    tags: {}
                    failureStrategies:
                      - onFailure:
                          errors:
                            - AllErrors
                          action:
                            type: StageRollback
          name: ExamplePipeline
          desc: Pipeline Description
          tags:
            example-tag-1: example-tag-1-value
            example-tag-2: example-tag-2-value
          git_details:
            branch_name: branch
            commit_message: Added Harness Git Experience
            last_object_id: abcdXYZ
            base_branch: old_branch
            last_commit_id: abcdXYZ
            connector_ref: git_connector
            store_type: REMOTE
            repo_name: example_repository
      description: Pipeline Patch Request body (All the non empty values in this request body will be updated).
      properties:
        pipeline_yaml:
          type: string
          description: Pipeline YAML (to be passed as a String).
        name:
          type: string
          description: Pipeline Name.
        desc:
          type: string
          description: Pipeline Description.
        tags:
          type: object
          additionalProperties:
            type: string
          maxProperties: 128
          description: Pipeline Tags.
        git_details:
          $ref: '#/components/schemas/GitUpdateDetails'
        version:
          type: string
          description: 'Version of pipeline yaml, should be one of "0" or "1"'
    MergeInputSetRequestBody:
      title: MergeInputSetRequestBody
      x-stoplight:
        id: 5zlzmmjzldtmd
      type: object
      properties:
        input_set_references:
          type: array
          x-stoplight:
            id: 4qm0407efvhhc
          description: List of Input Set References to be merged
          items:
            x-stoplight:
              id: 89rp962i8h64z
            type: string
        with_merged_pipeline_yaml:
          type: boolean
          x-stoplight:
            id: f3lq570yuh3o9
          description: This is a boolean value that indicates if the response must contain the YAML for the merged Pipeline. The default value is False.
          default: false
        stage_identifiers:
          type: array
          x-stoplight:
            id: f7sy8br03jr83
          description: List of Stage Ids. Input Sets corresponding to these Ids will be merged.
          items:
            x-stoplight:
              id: xuz5fu2qx5jtq
            type: string
        last_yaml_to_merge:
          type: string
          x-stoplight:
            id: j068wxbjz3r1p
          description: Runtime Input Yaml needed to be merged into the result of the merged Yaml of the inputSetReferences
        get_only_file_content:
          type: boolean
          x-stoplight:
            id: rfl7zvghe14jz
          description: To be set true if we want to set user flow in thread context
          default: false
    MergeInputSetResponseBody:
      title: MergeInputSetResponseBody
      x-stoplight:
        id: 8m8whxml87jhc
      type: object
      properties:
        inputs_yaml_merged:
          type: string
          x-stoplight:
            id: e45lxn0s67rg4
          description: Merged YAML of all the Input Sets
        merged_pipeline_yaml:
          type: string
          x-stoplight:
            id: 5s9wv5nzhvz1t
          description: Pipeline YAML after merging with the Input Sets
        is_error_response:
          type: boolean
          x-stoplight:
            id: 1djfc5m2rpeuc
          description: This field is true if the merging is not possible
        inputset_error_wrapper:
          $ref: '#/components/schemas/InputSetErrorWrapperDTO'
    InputSetErrorWrapperDTO:
      title: InputSetErrorWrapperDTO
      x-stoplight:
        id: wb8dehzwpui69
      type: object
      properties:
        error_pipeline_yaml:
          type: string
          x-stoplight:
            id: 68ryjw6ocvvcy
          description: 'If an Input Set save fails, this field contains the error fields, with the field values replaced with a UUID'
        uuid_to_error_response_map:
          type: object
          x-stoplight:
            id: o3epchwxjmwxz
          description: 'If an Input Set save fails, this field contains the map from FQN to why that FQN threw an error'
        invalid_inputset_references:
          type: array
          x-stoplight:
            id: 4r8u95lioblm9
          description: List of Input Sets that are invalid
          items:
            x-stoplight:
              id: twtj1e5cvths7
            type: string
    RerunPipelineRequest:
      title: RerunPipelineRequest
      x-stoplight:
        id: zvewbh4d0co0l
      type: object
      properties:
        inputs:
          type: object
          additionalProperties:
            type: object
          x-stoplight:
            id: m5vqxxvteyydy
          description: Inputs for V1 Pipeline if it contains Runtime Inputs.
        inputs_yaml:
          type: string
          x-stoplight:
            id: 1d3vm081ehes6
          description: Inputs YAML if the pipeline contains runtime inputs. This will be empty by default if pipeline does not contains runtime inputs
    HarnessApprovalActivityRequestBody:
      title: HarnessApprovalActivityRequestBody
      x-stoplight:
        id: 31wb0o4b39i6d
      type: object
      description: Request Body for Harness Approval Activity
      x-examples:
        Example 1:
          comments: string
          action: APPROVE
          approver_inputs:
            - name: example_input_1
              value: example_value_1
            - name: example_input_2
              value: example_value_2
      properties:
        comments:
          type: string
          x-stoplight:
            id: uwdhlma1w41im
        action:
          type: string
          x-stoplight:
            id: wlsruhzrbb5il
          enum:
            - APPROVE
            - REJECT
          minLength: 0
        approver_inputs:
          type: array
          x-stoplight:
            id: ja8u89k6sglj5
          items:
            $ref: '#/components/schemas/ApproverInputDTO'
    ApproverInputDTO:
      title: ApproverInputDTO
      x-stoplight:
        id: og57w3dhptsg7
      type: object
      properties:
        name:
          type: string
          x-stoplight:
            id: kudwz31eqh890
          minLength: 1
        value:
          type: string
          x-stoplight:
            id: zq44miw7wole8
          minLength: 0
      description: Approver Input DTO
    StageExecutionResponseList:
      title: StageExecutionResponseList
      x-stoplight:
        id: fe4a1r5dscv3h
      type: array
      items:
        $ref: '#/components/schemas/StageExecutionResponseBody'
      x-internal: true
    StageExecutionResponseBody:
      title: StageExecutionResponseBody
      x-stoplight:
        id: urs5zevdppnvo
      type: object
      description: This contains info about a Pipeline Stage needed for stage execution.
      properties:
        stage_identifier:
          type: string
          x-stoplight:
            id: llu9q5lljhlk1
          description: Stage Identifier
        stage_name:
          type: string
          x-stoplight:
            id: 493ik8nkpog7y
          description: Stage Name
        message:
          type: string
          x-stoplight:
            id: 420jji4tikw4p
          description: Warning message for Selective stage execution.
        is_to_be_blocked:
          type: boolean
          x-stoplight:
            id: 3c89l41vyjynb
          description: Checks if there is a dependency and stage cannot be run individually.
        stages_required:
          type: array
          x-stoplight:
            id: 7n7d3iv1a3bz4
          description: Stages that needs to be ran along with this stage as there is a dependency.
          items:
            x-stoplight:
              id: n84wq8qqdoldt
            type: string
    RunStageRequestBody:
      title: RunStageRequestBody
      x-stoplight:
        id: ysva1c8q67jr1
      type: object
      description: Request Parameters needed to run specific Stages of a Pipeline.
      properties:
        inputs:
          type: object
          additionalProperties:
            type: object
          x-stoplight:
            id: f7qhk93y3ya9l
          description: Inputs for V1 Pipeline if it contains Runtime Inputs.
        inputs_yaml:
          type: string
          x-stoplight:
            id: zgq85f09b46yc
          description: Inputs yaml of the Pipeline.
        stage_identifiers:
          type: array
          x-stoplight:
            id: kqstzvbvxjb8r
          description: List of stages to run.
          items:
            x-stoplight:
              id: zxdsfugbscyj4
            type: string
        expression_values:
          type: object
          additionalProperties:
            type: string
          x-stoplight:
            id: o0javtqvkrf0r
          description: 'If any selected stage to execute has expressions, then this map contains expressions with its corresponding values.'
    PipelineExecuteRequestBody:
      title: PipelineExecuteRequestBody
      x-stoplight:
        id: 5ioucv3ct58f8
      type: object
      properties:
        inputs:
          type: object
          additionalProperties:
            type: object
          x-stoplight:
            id: 3ucuen558w10e
          description: Inputs for V1 Pipeline if it contains Runtime Inputs.
        inputs_yaml:
          type: string
          x-stoplight:
            id: 9zeuwz6t1az44
          description: Inputs yaml of the Pipeline.
      x-examples:
        Example for V1 pipelines:
          inputs:
            input1: {}
            input2: {}
        Example 2:
          inputs_yaml: |
            pipeline:
              identifier: das
              stages:
                - stage:
                    identifier: wee
                    type: Custom
                    spec:
                      execution:
                        steps:
                          - step:
                              identifier: Wait_1
                              type: Wait
                              spec:
                                duration: 11s
      description: 'Please choose either the inputs parameter to provide input data in a structured format for v1 pipelines, or the inputs_yaml parameter to provide input data in YAML format works for both v0 and v1. Do not include both parameters in the same request.'
  securitySchemes:
    x-api-key:
      name: x-api-key
      type: apiKey
      in: header
      description: API key is a token provided while making the API calls. This is used to authenticate the client at the exposed endpoint.
  parameters:
    Limit:
      name: limit
      in: query
      required: false
      schema:
        type: integer
        default: 30
        maximum: 100
      description: 'Pagination: Number of items to return.'
    PageIndex:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 0
      description: 'Pagination page number strategy: Specify the page number within the paginated collection related to the number of items on each page.'
    SearchTerm:
      name: search_term
      in: query
      required: false
      schema:
        type: string
      description: This would be used to filter resources having attributes matching the search term.
    OrgParam:
      name: org
      in: path
      required: true
      schema:
        type: string
      description: Organization identifier
    ProjectParam:
      name: project
      in: path
      required: true
      schema:
        type: string
      description: Project identifier
    AccountHeader:
      name: Harness-Account
      in: header
      required: false
      schema:
        type: string
      description: 'Identifier field of the account the resource is scoped to. This is required for Authorization methods other than the x-api-key header. If you are using the x-api-key header, this can be skipped.'
    Branch:
      name: branch_name
      in: query
      required: false
      schema:
        type: string
      description: Name of the branch (for Git Experience).
    PipelineParam:
      name: pipeline
      in: path
      required: true
      schema:
        type: string
      description: Pipeline identifier
    IgnoreError:
      name: ignoreError
      in: path
      required: false
      schema:
        type: boolean
    TriggerParam:
      name: trigger
      in: path
      required: true
      schema:
        type: string
      description: Trigger identifier
    Sort:
      name: sort
      in: query
      required: false
      schema:
        type: string
        enum:
          - name
          - updated
      description: Parameter on the basis of which sorting is done.
    Order:
      name: order
      in: query
      required: false
      schema:
        type: string
        enum:
          - ASC
          - DESC
      description: Order on the basis of which sorting is done.
    UuidParam:
      name: uuid
      in: path
      required: true
      schema:
        type: string
      description: UUID
    InputSetParam:
      name: input-set
      in: path
      required: true
      schema:
        type: string
      description: Input Set identifier
    PipelineInputSetParam:
      name: pipeline
      in: query
      required: true
      schema:
        type: string
      description: Pipeline identifier for the Input Set.
    ExecutionIdParam:
      name: execution-id
      in: path
      required: true
      schema:
        type: string
      description: Pipeline Execution identifier
    PipelineRepoID:
      name: pipeline_repo_id
      in: query
      required: false
      schema:
        type: string
      description: Github Repo identifier of the Pipeline to which the Input Sets belong
    PipelineBranch:
      name: pipeline_branch
      in: query
      required: false
      schema:
        type: string
      description: Github branch of the Pipeline to which the Input Sets belong
  responses:
    PipelineCreateResponseBody:
      description: Pipeline response body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineCreateResponseBody'
          examples:
            example-pipeline:
              value:
                identifier: example_pipeline
        application/yaml:
          schema:
            $ref: '#/components/schemas/PipelineCreateResponseBody'
          examples:
            example-pipeline:
              value: |
                identifier: example_pipeline
    TriggerResponseBody:
      description: Trigger response body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TriggerResponseBody'
        application/yaml:
          schema:
            $ref: '#/components/schemas/TriggerResponseBody'
    TriggerGetResponseBody:
      description: Pipeline response body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TriggerGetResponseBody'
        application/yaml:
          schema:
            $ref: '#/components/schemas/TriggerGetResponseBody'
    PipelineValidationResponseBody:
      description: Pipeline Validation response body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineValidationResponseBody'
        application/yaml:
          schema:
            $ref: '#/components/schemas/PipelineValidationResponseBody'
    PipelineValidationUUIDResponseBody:
      description: Contains the UUID of the Pipeline Validation Event that's started
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineValidationUUIDResponseBody'
        application/yaml:
          schema:
            $ref: '#/components/schemas/PipelineValidationUUIDResponseBody'
    PipelineGetResponseBody:
      description: Pipeline response body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineGetResponseBody'
          examples:
            example-response:
              value:
                pipeline_yaml: example_yaml_text
                template_applied_pipeline_yaml: example_yaml_text_with_template
                identifier: example_pipeline
                name: ExamplePipeline
                org: example_org
                project: example_project
                description: Pipeline Description
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                modules:
                  - cd
                git_details:
                  object_id: example_object
                  branch_name: branch
                  file_path: /folder/file.json
                  repo_name: example_repository
                  commit_id: abcd123
                  file_url: www.repo/folder/file.com
                  repo_url: www.repo.com
                valid: true
                yaml_error_wrapper:
                  message: something is incorrect
                  message_fqn: something is incorrect at pipeline.name
                  stage_info:
                    identifier: example_stage
                    type: stage
                    name: Example Stage
                    fqn: pipeline.stages.stage
                  step_info:
                    identifier: example_step
                    type: string
                    name: string
                    fqn: pipeline.steps.step
                  fqn: pipeline.name
                  hint_message: try changing something
                cache_response_metadata:
                  cache_state: VALID_CACHE
                  ttl_left: 9223372036854776000
                  last_updated_at: 9223372036854776000
                created: 1234567890
                updated: 1234567890
        application/yaml:
          schema:
            $ref: '#/components/schemas/PipelineGetResponseBody'
          examples:
            example-response:
              value: |
                pipeline_yaml: example_yaml_text
                template_applied_pipeline_yaml: example_yaml_text_with_template
                identifier: example_pipeline
                name: ExamplePipeline
                org: example_org
                project: example_project
                description: Pipeline Description
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                modules:
                  - cd
                git_details:
                  object_id: example_object
                  branch_name: branch
                  file_path: /folder/file.json
                  repo_name: example_repository
                  commit_id: abcd123
                  file_url: www.repo/folder/file.com
                  repo_url: www.repo.com
                valid: true
                yaml_error_wrapper:
                  message: something is incorrect
                  message_fqn: something is incorrect at pipeline.name
                  stage_info:
                    identifier: example_stage
                    type: stage
                    name: Example Stage
                    fqn: pipeline.stages.stage
                  step_info:
                    identifier: example_step
                    type: string
                    name: string
                    fqn: pipeline.steps.step
                  fqn: pipeline.name
                  hint_message: try changing something
                cache_response_metadata:
                  cache_state: VALID_CACHE
                  ttl_left: 9223372036854776000
                  last_updated_at: 9223372036854776000
                created: 1234567890
                updated: 1234567890
    PipelineListResponseBody:
      description: Response body for List Pipelines.
      content:
        application/json:
          schema:
            description: Response body for List Pipelines.
            type: array
            items:
              $ref: '#/components/schemas/PipelineListResponseBody'
          examples:
            example-list-response:
              value:
                - identifier: example_pipeline
                  name: Example Pipeline
                  description: This is an Example Pipeline
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  created: 1234567890
                  updated: 1234567890
                  modules:
                    - CD
                  recent_execution_info:
                    - executor_info:
                        trigger_type: NOOP
                        username: harness_user
                        email: noreply@harness.io
                      execution_id: example_execution_identifier
                      execution_status: Running
                      started: 1234567890
                      ended: 1234567890
                      run_number: 5
                      parent_stage_info:
                        has_parent_pipeline: true
                        execution_id: example_parent_execution_identifier
                        identifier: example_parent_pipeline_id
                        project_id: example_project_id
                        org_id: example_org_id
                        run_sequence: 12671687
                        stage_node_id: example_stage_node_id
                  store_type: REMOTE
                  connector_ref: example_connector
                  valid: true
                  git_details:
                    object_id: example_object
                    branch_name: branch
                    file_path: /folder/file.json
                    repo_name: example_repository
                    commit_id: abcd123
                    file_url: www.repo/folder/file.com
                    repo_url: www.repo.com
        application/yaml:
          schema:
            description: Response body for List Pipelines.
            type: array
            items:
              $ref: '#/components/schemas/PipelineListResponseBody'
          examples:
            example-list-response:
              value: |
                - identifier: example_pipeline
                  name: Example Pipeline
                  description: This is an Example Pipeline
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  created: 1234567890
                  updated: 1234567890
                  modules:
                    - CD
                  recent_execution_info:
                    - executor_info:
                        trigger_type: NOOP
                        username: harness_user
                        email: noreply@harness.io
                      execution_id: example_execution_identifier
                      execution_status: Running
                      started: 1234567890
                      ended: 1234567890
                      run_number: 5
                      parent_stage_info:
                        has_parent_pipeline: true
                        execution_id: example_parent_execution_identifier
                        identifier: example_parent_pipeline_id
                        project_id: example_project_id
                        org_id: example_org_id
                        run_sequence: 12671687
                        stage_node_id: example_stage_node_id
                  store_type: REMOTE
                  connector_ref: example_connector
                  valid: true
                  git_details:
                    object_id: example_object
                    branch_name: branch
                    file_path: /folder/file.json
                    repo_name: example_repository
                    commit_id: abcd123
                    file_url: www.repo/folder/file.com
                    repo_url: www.repo.com
      headers:
        X-Total-Elements:
          schema:
            type: integer
          description: Total number of elements returned in Paginated response.
        X-Page-Number:
          schema:
            type: integer
          description: Page number in Paginated response.
        X-Page-Size:
          schema:
            type: integer
          description: Maximum page size in Paginated response.
    InputSetResponseBody:
      description: Input Set response body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputSetResponseBody'
          examples:
            example-input-set:
              value:
                input_set_yaml: example_input_set_yaml
                identifier: example_input_set
                name: Example Input Set
                org: example_org
                project: example_project
                description: InputSet Description
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                git_details:
                  object_id: example_object
                  branch_name: branch
                  file_path: /folder/file.json
                  repo_name: example_repository
                  commit_id: abcd123
                  file_url: www.repo/folder/file.com
                  repo_url: www.repo.com
                created: 1234567890
                updated: 9876543210
                error_details:
                  valid: false
                  message: Some fields in the Input Set are invalid.
                  outdated: true
                  error_pipeline_yaml: |
                    serviceConfig: "pipeline.stages.example_deploy_stage.spec.serviceConfig"
                  fqn_errors:
                    - fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig
                      errors:
                        - field_name: serviceConfig
                          message: Field not a runtime input
                          identifier_of_error_source: example_input_set
                  invalid_refs:
                    - example_invalid_input_set
        application/yaml:
          schema:
            $ref: '#/components/schemas/InputSetResponseBody'
          examples:
            example-input-set:
              value: |
                input_set_yaml: example_input_set_yaml
                identifier: example_input_set
                name: Example Input Set
                org: example_org
                project: example_project
                description: InputSet Description
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                git_details:
                  object_id: example_object
                  branch_name: branch
                  file_path: /folder/file.json
                  repo_name: example_repository
                  commit_id: abcd123
                  file_url: www.repo/folder/file.com
                  repo_url: www.repo.com
                created: 1234567890
                updated: 9876543210
                error_details:
                  valid: false
                  message: Some fields in the Input Set are invalid.
                  outdated: true
                  error_pipeline_yaml: |
                    serviceConfig: "pipeline.stages.example_deploy_stage.spec.serviceConfig"
                  fqn_errors:
                    - fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig
                      errors:
                        - field_name: serviceConfig
                          message: Field not a runtime input
                          identifier_of_error_source: example_input_set
                  invalid_refs:
                    - example_invalid_input_set
    InputSetListResponseBody:
      description: Input Set response body
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InputSetResponseBody'
          examples:
            example-input-sets:
              value:
                - input_set_yaml: example_input_set_yaml
                  identifier: example_input_set
                  name: Example Input Set
                  org: example_org
                  project: example_project
                  description: InputSet Description
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  git_details:
                    object_id: example_object
                    branch_name: branch
                    file_path: /folder/file.json
                    repo_name: example_repository
                    commit_id: abcd123
                    file_url: www.repo/folder/file.com
                    repo_url: www.repo.com
                  created: 1234567890
                  updated: 9876543210
                  error_details:
                    valid: false
                    message: Some fields in the Input Set are invalid.
                    outdated: true
                    error_pipeline_yaml: |
                      serviceConfig: "pipeline.stages.example_deploy_stage.spec.serviceConfig"
                    fqn_errors:
                      - fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig
                        errors:
                          - field_name: serviceConfig
                            message: Field not a runtime input
                            identifier_of_error_source: example_input_set
                    invalid_refs:
                      - example_invalid_input_set
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/InputSetResponseBody'
          examples:
            example-input-sets:
              value: |
                - input_set_yaml: example_input_set_yaml
                  identifier: example_input_set
                  name: Example Input Set
                  org: example_org
                  project: example_project
                  description: InputSet Description
                  tags:
                    example-tag-1: example-tag-1-value
                    example-tag-2: example-tag-2-value
                  git_details:
                    object_id: example_object
                    branch_name: branch
                    file_path: /folder/file.json
                    repo_name: example_repository
                    commit_id: abcd123
                    file_url: www.repo/folder/file.com
                    repo_url: www.repo.com
                  created: 1234567890
                  updated: 9876543210
                  error_details:
                    valid: false
                    message: Some fields in the Input Set are invalid.
                    outdated: true
                    error_pipeline_yaml: |
                      serviceConfig: "pipeline.stages.example_deploy_stage.spec.serviceConfig"
                    fqn_errors:
                      - fqn: pipeline.stages.example_deploy_stage.spec.serviceConfig
                        errors:
                          - field_name: serviceConfig
                            message: Field not a runtime input
                            identifier_of_error_source: example_input_set
                    invalid_refs:
                      - example_invalid_input_set
      headers:
        X-Total-Elements:
          schema:
            type: integer
          description: Total number of elements returned in Paginated response.
        X-Page-Number:
          schema:
            type: integer
          description: Page number in Paginated response.
        X-Page-Size:
          schema:
            type: integer
          description: Maximum page size in Paginated response.
    InputsResponseBody:
      description: Inputs Response Body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputsResponseBody'
          examples:
            inputs-response-body:
              value:
                inputs:
                  key1:
                    prompt: false
                    required: false
                    default: golang
                    type: string
                    desc: sample desc
                  key2:
                    prompt: true
                    required: true
                    type: string
                    desc: sample desc
                  key3:
                    prompt: false
                    required: false
                    type: number
                  key4:
                    prompt: false
                    required: true
                    type: secret
                    desc: sample desc
                    enums:
                      - enum1
                      - enum2
                options:
                  clone:
                    ref:
                      type:
                        prompt: false
                        required: true
                        type: string
                        enums:
                          - enum1
                          - enum2
                          - enum3
                      name:
                        prompt: false
                        required: true
                        type: string
    PipelineMoveConfigResponseBody:
      description: Response body for moving a pipeline configuration.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineMoveConfigResponseBody'
    InputSetMoveConfigResponseBody:
      description: Response body for moving an input set configuration.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputSetMoveConfigResponseBody'
    PipelineSaveResponseBody:
      description: Response body for pipeline save.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineSaveResponseBody'
    InputSetImportResponseBody:
      description: Response body for input set import.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputSetImportResponseBody'
    ApprovalInstanceResponseBody:
      description: Approval Instance response body
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApprovalInstanceResponseBody'
          examples:
            example-approval-instance:
              value:
                id: example_approval_instance
                type: HarnessApproval
                status: WAITING
                deadline: 1683953545329
                details:
                  approvalMessage: |-
                    Please review the following information
                    and approve the pipeline progression
                  includePipelineExecutionHistory: true
                  approvers:
                    userGroups:
                      - example_usergroup_1
                      - example_usergroup_2
                    minimumCount: 3
                    disallowPipelineExecutor: false
                  approvalActivities: []
                  approverInputs:
                    - name: example_input_1
                      defaultValue: example_value_1
                    - name: example_input_2
                      defaultValue: example_value_2
                  validatedApprovalUserGroups:
                    - accountIdentifier: example_account_identifier
                      orgIdentifier: example_org_identifier
                      projectIdentifier: example_project_identifier
                      identifier: example_usergroup_1
                      name: Example Usergroup 1
                    - accountIdentifier: example_account_identifier
                      orgIdentifier: example_org_identifier
                      projectIdentifier: example_project_identifier
                      identifier: example_usergroup_2
                      name: Example Usergroup 2
                  autoRejectEnabled: false
                  created: 1683867145351
                  updated: 1683867145351
                error_message: example error message
        application/yaml:
          schema:
            $ref: '#/components/schemas/ApprovalInstanceResponseBody'
          examples:
            example-approval-instance:
              value: |
                id: example_approval_instance
                type: HarnessApproval
                status: WAITING
                deadline: 1683953545329
                details:
                  approvalMessage: |-
                    Please review the following information
                    and approve the pipeline progression
                  includePipelineExecutionHistory: true
                  approvers:
                    userGroups:
                      - example_usergroup_1
                      - example_usergroup_2
                    minimumCount: 3
                    disallowPipelineExecutor: false
                  approvalActivities: []
                  approverInputs:
                    - name: example_input_1
                      defaultValue: example_value_1
                    - name: example_input_2
                      defaultValue: example_value_2
                  validatedApprovalUserGroups:
                    - accountIdentifier: example_account_identifier
                      orgIdentifier: example_org_identifier
                      projectIdentifier: example_project_identifier
                      identifier: example_usergroup_1
                      name: Example Usergroup 1
                    - accountIdentifier: example_account_identifier
                      orgIdentifier: example_org_identifier
                      projectIdentifier: example_project_identifier
                      identifier: example_usergroup_2
                      name: Example Usergroup 2
                  autoRejectEnabled: false
                  created: 1683867145351
                  updated: 1683867145351
                error_message: example error message
    ApprovalInstanceListResponseBody:
      description: Approval Instances list response body
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ApprovalInstanceResponseBody'
          examples:
            example-approval-instances:
              value:
                - id: example_approval_instance
                  type: HarnessApproval
                  status: WAITING
                  deadline: 1683953545329
                  details:
                    approvalMessage: |-
                      Please review the following information
                      and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    approvers:
                      userGroups:
                        - example_usergroup_1
                        - example_usergroup_2
                      minimumCount: 3
                      disallowPipelineExecutor: false
                    approvalActivities: []
                    approverInputs:
                      - name: example_input_1
                        defaultValue: example_value_1
                      - name: example_input_2
                        defaultValue: example_value_2
                    validatedApprovalUserGroups:
                      - accountIdentifier: example_account_identifier
                        orgIdentifier: example_org_identifier
                        projectIdentifier: example_project_identifier
                        identifier: example_usergroup_1
                        name: Example Usergroup 1
                      - accountIdentifier: example_account_identifier
                        orgIdentifier: example_org_identifier
                        projectIdentifier: example_project_identifier
                        identifier: example_usergroup_2
                        name: Example Usergroup 2
                    autoRejectEnabled: false
                    created: 1683867145351
                    updated: 1683867145351
                  error_message: example error message
        application/yaml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ApprovalInstanceResponseBody'
          examples:
            example-approval-instances:
              value: |
                - id: example_approval_instance
                  type: HarnessApproval
                  status: WAITING
                  deadline: 1683953545329
                  details:
                    approvalMessage: |-
                      Please review the following information
                      and approve the pipeline progression
                    includePipelineExecutionHistory: true
                    approvers:
                      userGroups:
                        - example_usergroup_1
                        - example_usergroup_2
                      minimumCount: 3
                      disallowPipelineExecutor: false
                    approvalActivities: []
                    approverInputs:
                      - name: example_input_1
                        defaultValue: example_value_1
                      - name: example_input_2
                        defaultValue: example_value_2
                    validatedApprovalUserGroups:
                      - accountIdentifier: example_account_identifier
                        orgIdentifier: example_org_identifier
                        projectIdentifier: example_project_identifier
                        identifier: example_usergroup_1
                        name: Example Usergroup 1
                      - accountIdentifier: example_account_identifier
                        orgIdentifier: example_org_identifier
                        projectIdentifier: example_project_identifier
                        identifier: example_usergroup_2
                        name: Example Usergroup 2
                    autoRejectEnabled: false
                    created: 1683867145351
                    updated: 1683867145351
                  error_message: example error message
    GitMetadataUpdateResponseBody:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GitMetadataUpdateResponseBody'
    IndividualSchemaResponseBody:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IndividualSchemaResponseBody'
    PipelineExecuteResponseBody:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineExecuteResponseBody'
    StepsDataResponseBody:
      description: Steps data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StepsDataResponseBody'
          examples:
            example-1:
              value:
                name: Library
                steps_data: []
                step_categories:
                  - name: Continuous Deployment
                    steps_data: []
                    step_categories:
                      - name: GitOps
                        steps_data:
                          - name: GitOps Merge PR
                            type: MergePR
                            disabled: false
                            feature_restriction_name: null
                          - name: Update GitOps App
                            type: UpdateGitOpsApp
                            disabled: false
                            feature_restriction_name: null
                        step_categories: []
                      - name: Kubernetes
                        steps_data:
                          - name: Canary Deployment
                            type: K8sCanaryDeploy
                            disabled: false
                            feature_restriction_name: null
                          - name: Canary Delete
                            type: K8sCanaryDelete
                            disabled: false
                            feature_restriction_name: null
                          - name: Apply
                            type: K8sApply
                            disabled: false
                            feature_restriction_name: null
                        step_categories: []
    PipelineInputSchemaDetailsResponseBody:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineInputSchemaDetailsResponseBody'
    MergeInputSetResponseBody:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MergeInputSetResponseBody'
    StageExecutionResponseList:
      description: Example response
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StageExecutionResponseList'
  requestBodies:
    TriggerRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TriggerRequestBody'
        application/yaml:
          schema:
            $ref: '#/components/schemas/TriggerRequestBody'
      description: Trigger request body
      required: true
    PipelineCreateRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineCreateRequestBody'
          examples:
            example-pipeline:
              value:
                pipeline_yaml: |
                  pipeline:
                    identifier: example_pipeline
                    name: ExamplePipeline
                    allowStageExecutions: false
                    stages:
                      - stage:
                          name: Example Build Stage
                          identifier: example_build_stage
                          description: ''
                          type: Approval
                          spec:
                            execution:
                              steps:
                                - step:
                                    name: Approval Step
                                    identifier: Approval_Step
                                    type: HarnessApproval
                                    timeout: 1d
                                    spec:
                                      approvalMessage: |-
                                        Please review the following information
                                        and approve the pipeline progression
                                      includePipelineExecutionHistory: true
                                      approvers:
                                        minimumCount: 1
                                        disallowPipelineExecutor: false
                                        userGroups: <+input>
                                      approverInputs: []
                                - step:
                                    type: ShellScript
                                    name: ShellScript Step
                                    identifier: ShellScript_Step
                                    spec:
                                      shell: Bash
                                      onDelegate: true
                                      source:
                                        type: Inline
                                        spec:
                                          script: <+input>
                                      environmentVariables: []
                                      outputVariables: []
                                      executionTarget: {}
                                    timeout: 10m
                          tags: {}
                      - stage:
                          name: Example Deploy Stage
                          identifier: example_deploy_stage
                          description: ''
                          type: Deployment
                          spec:
                            serviceConfig:
                              serviceRef: <+input>
                              serviceDefinition:
                                spec:
                                  variables: []
                                type: Kubernetes
                            infrastructure:
                              environmentRef: <+input>
                              infrastructureDefinition:
                                type: KubernetesDirect
                                spec:
                                  connectorRef: <+input>
                                  namespace: <+input>
                                  releaseName: release-<+INFRA_KEY>
                              allowSimultaneousDeployments: false
                            execution:
                              steps:
                                - step:
                                    name: Rollout Deployment
                                    identifier: rolloutDeployment
                                    type: K8sRollingDeploy
                                    timeout: 10m
                                    spec:
                                      skipDryRun: false
                              rollbackSteps:
                                - step:
                                    name: Rollback Rollout Deployment
                                    identifier: rollbackRolloutDeployment
                                    type: K8sRollingRollback
                                    timeout: 10m
                                    spec: {}
                          tags: {}
                          failureStrategies:
                            - onFailure:
                                errors:
                                  - AllErrors
                                action:
                                  type: StageRollback
                identifier: example_pipeline
                name: ExamplePipeline
                description: Pipeline Description
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                git_details:
                  branch_name: branch
                  file_path: /folder/file.json
                  commit_message: Added Harness Git Experience
                  base_branch: old_branch
                  connector_ref: git_connector
                  store_type: REMOTE
                  repo_name: example_repository
        application/yaml:
          schema:
            $ref: '#/components/schemas/PipelineCreateRequestBody'
          examples:
            example-pipeline:
              value: |
                pipeline_yaml: 'pipeline: identifier: example_pipeline name: ExamplePipeline allowStageExecutions: false stages: - stage: name: Example Build Stage identifier: example_build_stage description: '''' type: Approval spec: execution: steps: - step: name: Approval Step identifier: Approval_Step type: HarnessApproval timeout: 1d spec: approvalMessage: |- Please review the following information and approve the pipeline progression includePipelineExecutionHistory: true approvers: minimumCount: 1 disallowPipelineExecutor: false userGroups: <+input> approverInputs: [] - step: type: ShellScript name: ShellScript Step identifier: ShellScript_Step spec: shell: Bash onDelegate: true source: type: Inline spec: script: <+input> environmentVariables: [] outputVariables: [] executionTarget: {} timeout: 10m tags: {} - stage: name: Example Deploy Stage identifier: example_deploy_stage description: '''' type: Deployment spec: serviceConfig: serviceRef: <+input> serviceDefinition: spec: variables: [] type: Kubernetes infrastructure: environmentRef: <+input> infrastructureDefinition: type: KubernetesDirect spec: connectorRef: <+input> namespace: <+input> releaseName: release-<+INFRA_KEY> allowSimultaneousDeployments: false execution: steps: - step: name: Rollout Deployment identifier: rolloutDeployment type: K8sRollingDeploy timeout: 10m spec: skipDryRun: false rollbackSteps: - step: name: Rollback Rollout Deployment identifier: rollbackRolloutDeployment type: K8sRollingRollback timeout: 10m spec: {} tags: {} failureStrategies: - onFailure: errors: - AllErrors action: type: StageRollback'
                identifier: example_pipeline
                name: ExamplePipeline
                description: Pipeline Description
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                git_details:
                  branch_name: branch
                  file_path: /folder/file.json
                  commit_message: Added Harness Git Experience
                  base_branch: old_branch
                  connector_ref: git_connector
                  store_type: REMOTE
                  repo_name: example_repository
      description: Pipeline request body
      required: true
    PipelineUpdateRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineUpdateRequestBody'
          examples:
            example-pipeline:
              value:
                pipeline_yaml: |
                  pipeline:
                    identifier: example_pipeline
                    name: ExamplePipeline
                    allowStageExecutions: false
                    stages:
                      - stage:
                          name: Example Build Stage
                          identifier: example_build_stage
                          description: ''
                          type: Approval
                          spec:
                            execution:
                              steps:
                                - step:
                                    name: Approval Step
                                    identifier: Approval_Step
                                    type: HarnessApproval
                                    timeout: 1d
                                    spec:
                                      approvalMessage: |-
                                        Please review the following information
                                        and approve the pipeline progression
                                      includePipelineExecutionHistory: true
                                      approvers:
                                        minimumCount: 1
                                        disallowPipelineExecutor: false
                                        userGroups: <+input>
                                      approverInputs: []
                                - step:
                                    type: ShellScript
                                    name: ShellScript Step
                                    identifier: ShellScript_Step
                                    spec:
                                      shell: Bash
                                      onDelegate: true
                                      source:
                                        type: Inline
                                        spec:
                                          script: <+input>
                                      environmentVariables: []
                                      outputVariables: []
                                      executionTarget: {}
                                    timeout: 10m
                          tags: {}
                      - stage:
                          name: Example Deploy Stage
                          identifier: example_deploy_stage
                          description: ''
                          type: Deployment
                          spec:
                            serviceConfig:
                              serviceRef: <+input>
                              serviceDefinition:
                                spec:
                                  variables: []
                                type: Kubernetes
                            infrastructure:
                              environmentRef: <+input>
                              infrastructureDefinition:
                                type: KubernetesDirect
                                spec:
                                  connectorRef: <+input>
                                  namespace: <+input>
                                  releaseName: release-<+INFRA_KEY>
                              allowSimultaneousDeployments: false
                            execution:
                              steps:
                                - step:
                                    name: Rollout Deployment
                                    identifier: rolloutDeployment
                                    type: K8sRollingDeploy
                                    timeout: 10m
                                    spec:
                                      skipDryRun: false
                              rollbackSteps:
                                - step:
                                    name: Rollback Rollout Deployment
                                    identifier: rollbackRolloutDeployment
                                    type: K8sRollingRollback
                                    timeout: 10m
                                    spec: {}
                          tags: {}
                          failureStrategies:
                            - onFailure:
                                errors:
                                  - AllErrors
                                action:
                                  type: StageRollback
                identifier: example_pipeline
                name: ExamplePipeline
                description: Pipeline Description
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                git_details:
                  branch_name: branch
                  commit_message: Added Harness Git Experience
                  last_object_id: abcdXYZ
                  base_branch: old_branch
                  last_commit_id: abcdXYZ
                  connector_ref: git_connector
                  store_type: REMOTE
                  repo_name: example_repository
        application/yaml:
          schema:
            $ref: '#/components/schemas/PipelineUpdateRequestBody'
          examples:
            example-pipeline:
              value: |
                pipeline_yaml: 'pipeline: identifier: example_pipeline name: ExamplePipeline allowStageExecutions: false stages: - stage: name: Example Build Stage identifier: example_build_stage description: '''' type: Approval spec: execution: steps: - step: name: Approval Step identifier: Approval_Step type: HarnessApproval timeout: 1d spec: approvalMessage: |- Please review the following information and approve the pipeline progression includePipelineExecutionHistory: true approvers: minimumCount: 1 disallowPipelineExecutor: false userGroups: <+input> approverInputs: [] - step: type: ShellScript name: ShellScript Step identifier: ShellScript_Step spec: shell: Bash onDelegate: true source: type: Inline spec: script: <+input> environmentVariables: [] outputVariables: [] executionTarget: {} timeout: 10m tags: {} - stage: name: Example Deploy Stage identifier: example_deploy_stage description: '''' type: Deployment spec: serviceConfig: serviceRef: <+input> serviceDefinition: spec: variables: [] type: Kubernetes infrastructure: environmentRef: <+input> infrastructureDefinition: type: KubernetesDirect spec: connectorRef: <+input> namespace: <+input> releaseName: release-<+INFRA_KEY> allowSimultaneousDeployments: false execution: steps: - step: name: Rollout Deployment identifier: rolloutDeployment type: K8sRollingDeploy timeout: 10m spec: skipDryRun: false rollbackSteps: - step: name: Rollback Rollout Deployment identifier: rollbackRolloutDeployment type: K8sRollingRollback timeout: 10m spec: {} tags: {} failureStrategies: - onFailure: errors: - AllErrors action: type: StageRollback'
                identifier: example_pipeline
                name: ExamplePipeline
                description: Pipeline Description
                tags:
                  example-tag-1: example-tag-1-value
                  example-tag-2: example-tag-2-value
                git_details:
                  branch_name: branch
                  commit_message: Added Harness Git Experience
                  last_object_id: abcdXYZ
                  base_branch: old_branch
                  last_commit_id: abcdXYZ
      description: Pipeline request body
      required: true
    InputSetCreateRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputSetCreateRequestBody'
          examples:
            example-input:
              value:
                input_set_yaml: |-
                  inputSet:
                      pipeline:
                          identifier: Example_Pipeline
                          stages:
                              - stage:
                                    identifier: Example_Stage
                                    type: Approval
                                    spec:
                                        execution:
                                            steps:
                                                - step:
                                                      identifier: Approval_Step
                                                      type: HarnessApproval
                                                      spec:
                                                          approvers:
                                                              userGroups:
                                                                  - account.Admins
                                                - step:
                                                      identifier: Shellscript_Step
                                                      type: ShellScript
                                                      spec:
                                                          source:\n                                            type: Inline
                                                              spec:\n                                                script: echo "ShellScript"
                              - stage:
                                    identifier: Sample_Deploy_Stage
                                    type: Deployment
                                    spec:
                                        serviceConfig:
                                            serviceRef: Service1
                                        infrastructure:
                                            environmentRef: Env1
                                            infrastructureDefinition:
                                                type: KubernetesDirect
                                                spec:
                                                    connectorRef: account.harnessciplatform
                                                    namespace: sample
                identifier: example_input_set
                name: ExampleInputSet
                description: Input Set Description
                tags:
                  property1: example-tag-1-value
                  property2: example-tag-2-value
                git_details:
                  branch_name: branch
                  file_path: /folder/file.json
                  commit_message: Added Harness Git Experience
                  base_branch: old_branch
                  connector_ref: git_connector
                  store_type: REMOTE
                  repo_name: example_repository
        application/yaml:
          schema:
            $ref: '#/components/schemas/InputSetCreateRequestBody'
          examples:
            example-input:
              value: |
                input_set_yaml: |-
                  inputSet:
                      pipeline:
                          identifier: Example_Pipeline
                          stages:
                              - stage:
                                    identifier: Example_Stage
                                    type: Approval
                                    spec:
                                        execution:
                                            steps:
                                                - step:
                                                      identifier: Approval_Step
                                                      type: HarnessApproval
                                                      spec:
                                                          approvers:
                                                              userGroups:
                                                                  - account.Admins
                                                - step:
                                                      identifier: Shellscript_Step
                                                      type: ShellScript
                                                      spec:
                                                          source:\n                                            type: Inline
                                                              spec:\n                                                script: echo "ShellScript"
                              - stage:
                                    identifier: Sample_Deploy_Stage
                                    type: Deployment
                                    spec:
                                        serviceConfig:
                                            serviceRef: Service1
                                        infrastructure:
                                            environmentRef: Env1
                                            infrastructureDefinition:
                                                type: KubernetesDirect
                                                spec:
                                                    connectorRef: account.harnessciplatform
                                                    namespace: sample
                identifier: example_input_set
                name: ExampleInputSet
                description: Input Set Description
                tags:
                  property1: example-tag-1-value
                  property2: example-tag-2-value
                git_details:
                  branch_name: branch
                  file_path: /folder/file.json
                  commit_message: Added Harness Git Experience
                  base_branch: old_branch
                  connector_ref: git_connector
                  store_type: INLINE
                  repo_name: example_repository
      description: Input Set create request body.
      required: true
    InputSetUpdateRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputSetUpdateRequestBody'
          examples:
            example-input:
              value:
                input_set_yaml: |-
                  inputSet:
                      pipeline:
                          identifier: Example_Pipeline
                          stages:
                              - stage:
                                    identifier: Example_Stage
                                    type: Approval
                                    spec:
                                        execution:
                                            steps:
                                                - step:
                                                      identifier: Approval_Step
                                                      type: HarnessApproval
                                                      spec:
                                                          approvers:
                                                              userGroups:
                                                                  - account.Admins
                                                - step:
                                                      identifier: Shellscript_Step
                                                      type: ShellScript
                                                      spec:
                                                          source:\n                                            type: Inline
                                                              spec:\n                                                script: echo "ShellScript"
                              - stage:
                                    identifier: Sample_Deploy_Stage
                                    type: Deployment
                                    spec:
                                        serviceConfig:
                                            serviceRef: Service1
                                        infrastructure:
                                            environmentRef: Env1
                                            infrastructureDefinition:
                                                type: KubernetesDirect
                                                spec:
                                                    connectorRef: account.harnessciplatform
                                                    namespace: sample
                identifier: example_input_set
                name: ExampleInputSet
                description: Input Set Description
                tags:
                  property1: example-tag-1-value
                  property2: example-tag-2-value
                git_details:
                  branch_name: branch
                  commit_message: Added Harness Git Experience
                  last_object_id: abcdXYZ
                  base_branch: old_branch
                  last_commit_id: abcdXYZ
                  parent_entity_connector_ref: git_connector
                  parent_entity_repo_name: example_repository
        application/yaml:
          schema:
            $ref: '#/components/schemas/InputSetUpdateRequestBody'
          examples:
            example-input:
              value: |
                input_set_yaml: |-
                  inputSet:
                      pipeline:
                          identifier: Example_Pipeline
                          stages:
                              - stage:
                                    identifier: Example_Stage
                                    type: Approval
                                    spec:
                                        execution:
                                            steps:
                                                - step:
                                                      identifier: Approval_Step
                                                      type: HarnessApproval
                                                      spec:
                                                          approvers:
                                                              userGroups:
                                                                  - account.Admins
                                                - step:
                                                      identifier: Shellscript_Step
                                                      type: ShellScript
                                                      spec:
                                                          source:\n                                            type: Inline
                                                              spec:\n                                                script: echo "ShellScript"
                              - stage:
                                    identifier: Sample_Deploy_Stage
                                    type: Deployment
                                    spec:
                                        serviceConfig:
                                            serviceRef: Service1
                                        infrastructure:
                                            environmentRef: Env1
                                            infrastructureDefinition:
                                                type: KubernetesDirect
                                                spec:
                                                    connectorRef: account.harnessciplatform
                                                    namespace: sample
                identifier: example_input_set
                name: ExampleInputSet
                description: Input Set Description
                tags:
                  property1: example-tag-1-value
                  property2: example-tag-2-value
                git_details:
                  branch_name: branch
                  commit_message: Added Harness Git Experience
                  last_object_id: abcdXYZ
                  base_branch: old_branch
                  last_commit_id: abcdXYZ
                  parent_entity_connector_ref: git_connector
                  parent_entity_repo_name: example_repository
      description: Input Set update request body
      required: true
    PipelineMoveConfigRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineMoveConfigRequestBody'
    InputSetMoveConfigRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputSetMoveConfigRequestBody'
    PipelineImportRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineImportRequestBody'
      description: Pipeline import request body
    InputSetImportRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputSetImportRequestBody'
      description: Input Set import request body
    GitMetadataUpdateRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GitMetadataUpdateRequestBody'
    StepPalleteFilterRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StepPalleteFilterRequestBody'
          examples:
            example-1:
              value:
                step_pallete_module_infos:
                  - module: cd
                    category: Kubernetes
                    should_show_common_steps: true
                  - module: cd
                    category: Builds
                    should_show_common_steps: false
                  - module: cv
                    should_show_common_steps: false
                  - module: cd
                    category: Chaos
                    should_show_common_steps: false
                  - module: pms
                    category: ssca
                    should_show_common_steps: false
                version: '1'
    PipelineInputsSchemaRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineInputsSchemaRequestBody'
    PipelinePatchRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelinePatchRequestBody'
    MergeInputSetRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MergeInputSetRequestBody'
    HarnessApprovalActivityRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HarnessApprovalActivityRequestBody'
          examples:
            Example 1:
              value:
                comments: string
                action: APPROVE
                approver_inputs:
                  - name: example_input_1
                    value: example_value_1
                  - name: example_input_2
                    value: example_value_2
      description: Request Body for Harness Approval Activity
    RerunPipelineRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RerunPipelineRequest'
    RunStageRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RunStageRequestBody'
    PipelineExecuteRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PipelineExecuteRequestBody'
